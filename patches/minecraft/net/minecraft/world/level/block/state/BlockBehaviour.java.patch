--- a/net/minecraft/world/level/block/state/BlockBehaviour.java
+++ b/net/minecraft/world/level/block/state/BlockBehaviour.java
@@ -95,6 +_,17 @@
       this.f_60449_ = p_60452_.f_60893_;
       this.f_60438_ = p_60452_.f_60903_;
       this.f_60439_ = p_60452_;
+      final ResourceLocation lootTableCache = p_60452_.f_60894_;
+      if (lootTableCache != null) {
+         this.lootTableSupplier = () -> lootTableCache;
+      } else if (p_60452_.lootTableSupplier != null) {
+         this.lootTableSupplier = p_60452_.lootTableSupplier;
+      } else {
+         this.lootTableSupplier = () -> {
+            ResourceLocation registryName = net.minecraftforge.registries.ForgeRegistries.BLOCKS.getKey((Block) this);
+            return new ResourceLocation(registryName.m_135827_(), "blocks/" + registryName.m_135815_());
+         };
+      }
    }
 
    /** @deprecated */
@@ -143,7 +_,7 @@
    /** @deprecated */
    @Deprecated
    public void m_6810_(BlockState p_60515_, Level p_60516_, BlockPos p_60517_, BlockState p_60518_, boolean p_60519_) {
-      if (p_60515_.m_155947_() && !p_60515_.m_60713_(p_60518_.m_60734_())) {
+      if (p_60515_.m_155947_() && (!p_60515_.m_60713_(p_60518_.m_60734_()) || !p_60518_.m_155947_())) {
          p_60516_.m_46747_(p_60517_);
       }
 
@@ -220,7 +_,7 @@
    /** @deprecated */
    @Deprecated
    public boolean m_6864_(BlockState p_60470_, BlockPlaceContext p_60471_) {
-      return this.f_60442_.m_76336_() && (p_60471_.m_43722_().m_41619_() || !p_60471_.m_43722_().m_150930_(this.m_5456_()));
+      return p_60470_.m_60767_().m_76336_() && (p_60471_.m_43722_().m_41619_() || p_60471_.m_43722_().m_41720_() != this.m_5456_());
    }
 
    /** @deprecated */
@@ -350,8 +_,8 @@
       if (f == -1.0F) {
          return 0.0F;
       } else {
-         int i = p_60467_.m_36298_(p_60466_) ? 30 : 100;
-         return p_60467_.m_36281_(p_60466_) / f / (float)i;
+         int i = net.minecraftforge.common.ForgeHooks.isCorrectToolForDrops(p_60466_, p_60467_) ? 30 : 100;
+         return p_60467_.getDigSpeed(p_60466_, p_60469_) / f / (float)i;
       }
    }
 
@@ -384,8 +_,7 @@
 
    public final ResourceLocation m_60589_() {
       if (this.f_60440_ == null) {
-         ResourceLocation resourcelocation = Registry.f_122824_.m_7981_(this.m_7374_());
-         this.f_60440_ = new ResourceLocation(resourcelocation.m_135827_(), "blocks/" + resourcelocation.m_135815_());
+         this.f_60440_ = this.lootTableSupplier.get();
       }
 
       return this.f_60440_;
@@ -408,6 +_,14 @@
       return this.f_60439_.f_60888_;
    }
 
+   protected boolean isAir(BlockState state) {
+      return ((BlockStateBase)state).f_60596_;
+   }
+
+   /* ======================================== FORGE START ===================================== */
+   private final java.util.function.Supplier<ResourceLocation> lootTableSupplier;
+   /* ========================================= FORGE END ====================================== */
+
    public abstract static class BlockStateBase extends StateHolder<Block, BlockState> {
       private final int f_60594_;
       private final boolean f_60595_;
@@ -426,6 +_,9 @@
       @Nullable
       protected BlockBehaviour.BlockStateBase.Cache f_60593_;
 
+      private FluidState fluidStateCache = null;
+      private boolean isTickable;
+
       protected BlockStateBase(Block p_60608_, ImmutableMap<Property<?>, Comparable<?>> p_60609_, MapCodec<BlockState> p_60610_) {
          super(p_60608_, p_60609_, p_60610_);
          BlockBehaviour.Properties blockbehaviour$properties = p_60608_.f_60439_;
@@ -443,13 +_,76 @@
          this.f_60605_ = blockbehaviour$properties.f_60901_;
          this.f_60606_ = blockbehaviour$properties.f_60902_;
          this.f_222962_ = blockbehaviour$properties.f_222978_.apply(this.m_7160_());
+         this.conditionallyFullOpaque = this.f_60601_ & this.f_60595_; // Paper
+
+      }
+
+      // Paper start
+      protected boolean shapeExceedsCube = true;
+      public final boolean shapeExceedsCube() {
+         return this.shapeExceedsCube;
+      }
+      // Paper end
+      // Paper start - starlight
+      protected int opacityIfCached = -1;
+      // ret -1 if opacity is dynamic, or -1 if the block is conditionally full opaque, else return opacity in [0, 15]
+      public final int getOpacityIfCached() {
+         return this.opacityIfCached;
+      }
+
+      protected final boolean conditionallyFullOpaque;
+      public final boolean isConditionallyFullOpaque() {
+         return this.conditionallyFullOpaque;
+      }
+      // Paper end - starlight
+
+      private long blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_SPECIAL_BLOCK;
+
+      public final long getBlockCollisionBehavior() {
+         return this.blockCollisionBehavior;
       }
 
       public void m_60611_() {
+         this.fluidStateCache = this.m_60734_().m_5888_(this.m_7160_());
+         this.isTickable = this.m_60734_().m_6724_(this.m_7160_());
+
          if (!this.m_60734_().m_49967_()) {
             this.f_60593_ = new BlockBehaviour.BlockStateBase.Cache(this.m_7160_());
          }
 
+         this.shapeExceedsCube = this.f_60593_ == null || this.f_60593_.f_60843_; // Paper - moved from actual method to here
+         this.opacityIfCached = this.f_60593_ == null || this.isConditionallyFullOpaque() ? -1 : this.f_60593_.f_60848_; // Paper - starlight - cache opacity for light
+
+         // Paper start
+         if (io.papermc.paper.util.CollisionUtil.isSpecialCollidingBlock(this)) {
+            this.blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_SPECIAL_BLOCK;
+         } else {
+            try {
+               // There is NOTHING HACKY ABOUT THIS AT ALLLLLLLLLLLLLLL
+               VoxelShape constantShape = this.m_60742_(null, null, null);
+               if (constantShape == null) {
+                  this.blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_UNKNOWN_BLOCK;
+               } else {
+                  constantShape = constantShape.m_83296_();
+                  if (constantShape.m_83281_()) {
+                     this.blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_EMPTY_BLOCK;
+                  } else {
+                     final List<net.minecraft.world.phys.AABB> boxes = constantShape.m_83299_();
+                     if (constantShape == net.minecraft.world.phys.shapes.Shapes.getFullUnoptimisedCube() || (boxes.size() == 1 && boxes.get(0).equals(net.minecraft.world.phys.shapes.Shapes.BLOCK_OPTIMISED.aabb))) {
+                        this.blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_FULL_BLOCK;
+                     } else {
+                        this.blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_UNKNOWN_BLOCK;
+                     }
+                  }
+               }
+            } catch (final Error error) {
+               throw error;
+            } catch (final Throwable throwable) {
+               this.blockCollisionBehavior = io.papermc.paper.util.CollisionUtil.KNOWN_UNKNOWN_BLOCK;
+            }
+         }
+         // Paper end
+
       }
 
       public Block m_60734_() {
@@ -488,22 +_,26 @@
          return this.f_60593_ == null || this.f_60593_.f_60843_;
       }
 
-      public boolean m_60787_() {
+      public final boolean m_60787_() { // Paper
          return this.f_60595_;
       }
 
-      public int m_60791_() {
+      /** @deprecated use {@link BlockState#getLightEmission(BlockGetter, BlockPos)} */
+      @Deprecated
+      public final int m_60791_() { // Paper
          return this.f_60594_;
       }
 
-      public boolean m_60795_() {
-         return this.f_60596_;
+      public final boolean m_60795_() { // Paper
+         return this.m_60734_().isAir((BlockState)this);
       }
 
       public MaterialColor m_60780_(BlockGetter p_60781_, BlockPos p_60782_) {
-         return this.f_60598_;
+         return m_60734_().getMapColor(this.m_7160_(), p_60781_, p_60782_, this.f_60598_);
       }
 
+      /** @deprecated use {@link BlockState#rotate(LevelAccessor, BlockPos, Rotation)} */
+      @Deprecated
       public BlockState m_60717_(Rotation p_60718_) {
          return this.m_60734_().m_6843_(this.m_7160_(), p_60718_);
       }
@@ -569,7 +_,7 @@
          }
       }
 
-      public boolean m_60815_() {
+      public final boolean m_60815_() { // Paper
          return this.f_60601_;
       }
 
@@ -762,12 +_,25 @@
          return this.m_60734_() == p_60714_;
       }
 
-      public FluidState m_60819_() {
-         return this.m_60734_().m_5888_(this.m_7160_());
+      /**
+       * @reason Use cached property
+       * @author JellySquid
+       */
+      public FluidState m_60819_() {  // Paper
+         if (this.fluidStateCache == null) {
+            //noinspection deprecation
+            this.fluidStateCache = this.m_60734_().m_5888_(this.m_7160_());
+         }
+
+         return this.fluidStateCache;
       }
 
-      public boolean m_60823_() {
-         return this.m_60734_().m_6724_(this.m_7160_());
+      /**
+       * @reason Use cached property
+       * @author Maity
+       */
+      public final boolean m_60823_() { // Paper
+         return this.isTickable;
       }
 
       public long m_60726_(BlockPos p_60727_) {
@@ -886,8 +_,9 @@
       ResourceLocation f_60894_;
       boolean f_60895_ = true;
       boolean f_60896_;
+      private java.util.function.Supplier<ResourceLocation> lootTableSupplier;
       BlockBehaviour.StateArgumentPredicate<EntityType<?>> f_60897_ = (p_60935_, p_60936_, p_60937_, p_60938_) -> {
-         return p_60935_.m_60783_(p_60936_, p_60937_, Direction.UP) && p_60935_.m_60791_() < 14;
+         return p_60935_.m_60783_(p_60936_, p_60937_, Direction.UP) && p_60935_.getLightEmission(p_60936_, p_60937_) < 14;
       };
       BlockBehaviour.StatePredicate f_60898_ = (p_60985_, p_60986_, p_60987_) -> {
          return p_60985_.m_60767_().m_76337_() && p_60985_.m_60838_(p_60986_, p_60987_);
@@ -1018,9 +_,15 @@
          return this;
       }
 
+      @Deprecated // FORGE: Use the variant that takes a Supplier below
       public BlockBehaviour.Properties m_60916_(Block p_60917_) {
-         this.f_60894_ = p_60917_.m_60589_();
+         this.lootTableSupplier = () -> net.minecraftforge.registries.ForgeRegistries.BLOCKS.getDelegateOrThrow(p_60917_).get().m_60589_();
          return this;
+      }
+
+      public BlockBehaviour.Properties lootFrom(java.util.function.Supplier<? extends Block> blockIn) {
+          this.lootTableSupplier = () -> blockIn.get().m_60589_();
+          return this;
       }
 
       public BlockBehaviour.Properties m_60996_() {
