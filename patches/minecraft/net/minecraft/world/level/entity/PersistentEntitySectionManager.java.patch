--- a/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
+++ b/net/minecraft/world/level/entity/PersistentEntitySectionManager.java
@@ -19,9 +_,12 @@
 import java.util.function.Consumer;
 import java.util.stream.Collectors;
 import java.util.stream.Stream;
+
+import net.minecraft.client.multiplayer.ClientChunkCache;
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.SectionPos;
 import net.minecraft.server.level.ChunkHolder;
+import net.minecraft.server.level.ServerChunkCache;
 import net.minecraft.util.CsvOutput;
 import net.minecraft.util.VisibleForDebug;
 import net.minecraft.world.entity.Entity;
@@ -41,7 +_,69 @@
    private final LongSet f_157499_ = new LongOpenHashSet();
    private final Queue<ChunkEntities<T>> f_157500_ = Queues.newConcurrentLinkedQueue();
 
-   public PersistentEntitySectionManager(Class<T> p_157503_, LevelCallback<T> p_157504_, EntityPersistentStorage<T> p_157505_) {
+   // Paper start - optimise notify()
+   public final void removeNavigatorsFromData(Entity entity, final int chunkX, final int chunkZ) {
+      if (!(entity instanceof net.minecraft.world.entity.Mob)) {
+         return;
+      }
+      io.papermc.paper.chunk.SingleThreadChunkRegionManager.RegionSection section =
+              ((ServerChunkCache) this.entitySliceManager.world.m_7726_()).f_8325_.dataRegionManager.getRegionSection(chunkX, chunkZ);
+      if (section != null) {
+         net.minecraft.server.level.ChunkMap.DataRegionSectionData sectionData = (net.minecraft.server.level.ChunkMap.DataRegionSectionData)section.sectionData;
+         sectionData.removeFromNavigators(section, ((net.minecraft.world.entity.Mob)entity));
+      }
+   }
+
+   public final void removeNavigatorsFromData(Entity entity) {
+      if (!(entity instanceof net.minecraft.world.entity.Mob)) {
+         return;
+      }
+      BlockPos entityPos = entity.m_20183_();
+      io.papermc.paper.chunk.SingleThreadChunkRegionManager.RegionSection section =
+              ((ServerChunkCache) this.entitySliceManager.world.m_7726_()).f_8325_.dataRegionManager.getRegionSection(entityPos.m_123341_() >> 4, entityPos.m_123343_() >> 4);
+      if (section != null) {
+         net.minecraft.server.level.ChunkMap.DataRegionSectionData sectionData = (net.minecraft.server.level.ChunkMap.DataRegionSectionData)section.sectionData;
+         sectionData.removeFromNavigators(section, ((net.minecraft.world.entity.Mob)entity));
+      }
+   }
+
+   public final void addNavigatorsIfPathingToRegion(Entity entity) {
+      if (!(entity instanceof net.minecraft.world.entity.Mob)) {
+         return;
+      }
+      BlockPos entityPos = entity.m_20183_();
+      io.papermc.paper.chunk.SingleThreadChunkRegionManager.RegionSection section =
+              ((ServerChunkCache) this.entitySliceManager.world.m_7726_()).f_8325_.dataRegionManager.getRegionSection(entityPos.m_123341_() >> 4, entityPos.m_123343_() >> 4);
+      if (section != null) {
+         net.minecraft.server.level.ChunkMap.DataRegionSectionData sectionData = (net.minecraft.server.level.ChunkMap.DataRegionSectionData)section.sectionData;
+         if (((net.minecraft.world.entity.Mob)entity).m_21573_().isViableForPathRecalculationChecking()) {
+            sectionData.addToNavigators(section, ((net.minecraft.world.entity.Mob)entity));
+         }
+      }
+   }
+
+   public final void updateNavigatorsInRegion(Entity entity) {
+      if (!(entity instanceof net.minecraft.world.entity.Mob)) {
+         return;
+      }
+      BlockPos entityPos = entity.m_20183_();
+      io.papermc.paper.chunk.SingleThreadChunkRegionManager.RegionSection section =
+              ((ServerChunkCache) this.entitySliceManager.world.m_7726_()).f_8325_.dataRegionManager.getRegionSection(entityPos.m_123341_() >> 4, entityPos.m_123343_() >> 4);
+      if (section != null) {
+         net.minecraft.server.level.ChunkMap.DataRegionSectionData sectionData = (net.minecraft.server.level.ChunkMap.DataRegionSectionData)section.sectionData;
+         if (((net.minecraft.world.entity.Mob)entity).m_21573_().isViableForPathRecalculationChecking()) {
+            sectionData.addToNavigators(section, ((net.minecraft.world.entity.Mob)entity));
+         } else {
+            sectionData.removeFromNavigators(section, ((net.minecraft.world.entity.Mob)entity));
+         }
+      }
+   }
+   // Paper end - optimise notify
+
+   public final io.papermc.paper.world.EntitySliceManager entitySliceManager; // Paper
+
+   public PersistentEntitySectionManager(Class<T> p_157503_, LevelCallback<T> p_157504_, EntityPersistentStorage<T> p_157505_, io.papermc.paper.world.EntitySliceManager entitySliceManager) {
+      this.entitySliceManager = entitySliceManager; // Paper
       this.f_157494_ = new EntityLookup<>();
       this.f_157495_ = new EntitySectionStorage<>(p_157503_, this.f_157497_);
       this.f_157497_.defaultReturnValue(Visibility.HIDDEN);
@@ -71,13 +_,23 @@
       return this.m_157538_(p_157534_, false);
    }
 
+   public boolean addNewEntityWithoutEvent(T entity) {
+      return this.addEntityWithoutEvent(entity, false);
+   }
+
    private boolean m_157538_(T p_157539_, boolean p_157540_) {
+      if (p_157539_ instanceof Entity entity && net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinLevelEvent(entity, entity.f_19853_, p_157540_))) return false;
+      return addEntityWithoutEvent(p_157539_, p_157540_);
+   }
+
+   private boolean addEntityWithoutEvent(T p_157539_, boolean p_157540_) {
       if (!this.m_157557_(p_157539_)) {
          return false;
       } else {
          long i = SectionPos.m_175568_(p_157539_.m_20183_());
          EntitySection<T> entitysection = this.f_157495_.m_156893_(i);
          entitysection.m_188346_(p_157539_);
+         this.entitySliceManager.addEntity((Entity)p_157539_); // Paper
          p_157539_.m_141960_(new PersistentEntitySectionManager.Callback(p_157539_, i, entitysection));
          if (!p_157540_) {
             this.f_157492_.m_141989_(p_157539_);
@@ -103,12 +_,14 @@
    public void m_157552_(Stream<T> p_157553_) {
       p_157553_.forEach((p_157607_) -> {
          this.m_157538_(p_157607_, true);
+         if (p_157607_ instanceof Entity entity) entity.onAddedToWorld();
       });
    }
 
    public void m_157559_(Stream<T> p_157560_) {
       p_157560_.forEach((p_157605_) -> {
          this.m_157538_(p_157605_, false);
+         if (p_157605_ instanceof Entity entity) entity.onAddedToWorld();
       });
    }
 
@@ -132,6 +_,7 @@
 
    public void m_157524_(ChunkPos p_157525_, ChunkHolder.FullChunkStatus p_157526_) {
       Visibility visibility = Visibility.m_157692_(p_157526_);
+      this.entitySliceManager.chunkStatusChange(p_157525_.f_45578_, p_157525_.f_45579_, p_157526_); // Paper
       this.m_157527_(p_157525_, visibility);
    }
 
@@ -185,7 +_,7 @@
 
    }
 
-   private boolean m_157512_(long p_157513_, Consumer<T> p_157514_) {
+   public boolean m_157512_(long p_157513_, Consumer<T> p_157514_) {
       PersistentEntitySectionManager.ChunkLoadStatus persistententitysectionmanager$chunkloadstatus = this.f_157498_.get(p_157513_);
       if (persistententitysectionmanager$chunkloadstatus == PersistentEntitySectionManager.ChunkLoadStatus.PENDING) {
          return false;
@@ -247,6 +_,7 @@
       while((chunkentities = this.f_157500_.poll()) != null) {
          chunkentities.m_156792_().forEach((p_157593_) -> {
             this.m_157538_(p_157593_, true);
+            if (p_157593_ instanceof Entity entity) entity.onAddedToWorld();
          });
          this.f_157498_.put(chunkentities.m_156791_().m_45588_(), PersistentEntitySectionManager.ChunkLoadStatus.LOADED);
       }
@@ -349,20 +_,37 @@
 
    class Callback implements EntityInLevelCallback {
       private final T f_157609_;
+      private final Entity realEntity;
       private long f_157610_;
       private EntitySection<T> f_157611_;
 
       Callback(T p_157614_, long p_157615_, EntitySection<T> p_157616_) {
          this.f_157609_ = p_157614_;
+         this.realEntity = p_157614_ instanceof Entity ? (Entity) p_157614_ : null;
          this.f_157610_ = p_157615_;
          this.f_157611_ = p_157616_;
       }
 
       public void m_142044_() {
          BlockPos blockpos = this.f_157609_.m_20183_();
-         long i = SectionPos.m_175568_(blockpos);
+         long i = SectionPos.m_175568_(blockpos); final long newSectionPos = i; // Paper - diff on change, new position section
          if (i != this.f_157610_) {
-            Visibility visibility = this.f_157611_.m_156848_();
+            PersistentEntitySectionManager.this.entitySliceManager.moveEntity((Entity)this.f_157609_); // Paper
+            Visibility visibility = this.f_157611_.m_156848_();  final Visibility oldVisibility = visibility; // Paper - diff on change - this should be OLD section visibility
+            // Paper start
+            int shift = ((ServerChunkCache) PersistentEntitySectionManager.this.entitySliceManager.world.m_7726_()).f_8325_.dataRegionManager.regionChunkShift;
+            int oldChunkX = io.papermc.paper.util.CoordinateUtils.getChunkSectionX(this.f_157610_);
+            int oldChunkZ = io.papermc.paper.util.CoordinateUtils.getChunkSectionZ(this.f_157610_);
+            int oldRegionX = oldChunkX >> shift;
+            int oldRegionZ = oldChunkZ >> shift;
+
+            int newRegionX = io.papermc.paper.util.CoordinateUtils.getChunkSectionX(newSectionPos) >> shift;
+            int newRegionZ = io.papermc.paper.util.CoordinateUtils.getChunkSectionZ(newSectionPos) >> shift;
+
+            if (oldRegionX != newRegionX || oldRegionZ != newRegionZ) {
+               PersistentEntitySectionManager.this.removeNavigatorsFromData((Entity)this.f_157609_, oldChunkX, oldChunkZ);
+            }
+            // Paper end
             if (!this.f_157611_.m_188355_(this.f_157609_)) {
                PersistentEntitySectionManager.f_157490_.warn("Entity {} wasn't found in section {} (moving to {})", this.f_157609_, SectionPos.m_123184_(this.f_157610_), i);
             }
@@ -370,9 +_,16 @@
             PersistentEntitySectionManager.this.m_157509_(this.f_157610_, this.f_157611_);
             EntitySection<T> entitysection = PersistentEntitySectionManager.this.f_157495_.m_156893_(i);
             entitysection.m_188346_(this.f_157609_);
+            long oldSectionKey = f_157610_;
             this.f_157611_ = entitysection;
             this.f_157610_ = i;
+            // Paper start
+            if ((oldRegionX != newRegionX || oldRegionZ != newRegionZ) && oldVisibility.m_157691_() && entitysection.m_156848_().m_157691_()) {
+               PersistentEntitySectionManager.this.addNavigatorsIfPathingToRegion((Entity)this.f_157609_);
+            }
+            // Paper end
             this.m_157620_(visibility, entitysection.m_156848_());
+            if (this.realEntity != null) net.minecraftforge.common.ForgeHooks.onEntityEnterSection(this.realEntity, oldSectionKey, i);
          }
 
       }
@@ -413,6 +_,8 @@
          if (!this.f_157611_.m_188355_(this.f_157609_)) {
             PersistentEntitySectionManager.f_157490_.warn("Entity {} wasn't found in section {} (destroying due to {})", this.f_157609_, SectionPos.m_123184_(this.f_157610_), p_157619_);
          }
+
+         PersistentEntitySectionManager.this.entitySliceManager.removeEntity((Entity)this.f_157609_); // Paper
 
          Visibility visibility = PersistentEntitySectionManager.m_157535_(this.f_157609_, this.f_157611_.m_156848_());
          if (visibility.m_157691_()) {
