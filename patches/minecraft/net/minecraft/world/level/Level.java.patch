--- a/net/minecraft/world/level/Level.java
+++ b/net/minecraft/world/level/Level.java
@@ -9,6 +_,8 @@
 import java.util.function.Predicate;
 import java.util.function.Supplier;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.util.MCUtil;
 import net.minecraft.CrashReport;
 import net.minecraft.CrashReportCategory;
 import net.minecraft.ReportedException;
@@ -24,6 +_,7 @@
 import net.minecraft.resources.ResourceLocation;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.level.ChunkHolder;
+import net.minecraft.server.level.ServerLevel;
 import net.minecraft.sounds.SoundEvent;
 import net.minecraft.sounds.SoundSource;
 import net.minecraft.util.Mth;
@@ -65,7 +_,7 @@
 import net.minecraft.world.phys.AABB;
 import net.minecraft.world.scores.Scoreboard;
 
-public abstract class Level implements LevelAccessor, AutoCloseable {
+public abstract class Level extends net.minecraftforge.common.capabilities.CapabilityProvider<Level> implements LevelAccessor, AutoCloseable, net.minecraftforge.common.extensions.IForgeLevel {
    public static final Codec<ResourceKey<Level>> f_46427_ = ResourceKey.m_195966_(Registry.f_122819_);
    public static final ResourceKey<Level> f_46428_ = ResourceKey.m_135785_(Registry.f_122819_, new ResourceLocation("overworld"));
    public static final ResourceKey<Level> f_46429_ = ResourceKey.m_135785_(Registry.f_122819_, new ResourceLocation("the_nether"));
@@ -82,7 +_,7 @@
    protected final NeighborUpdater f_220350_;
    private final List<TickingBlockEntity> f_151503_ = Lists.newArrayList();
    private boolean f_151504_;
-   private final Thread f_46423_;
+   public Thread f_46423_;
    private final boolean f_46424_;
    private int f_46425_;
    protected int f_46435_ = RandomSource.m_216327_().m_188502_();
@@ -104,8 +_,113 @@
    private final BiomeManager f_46420_;
    private final ResourceKey<Level> f_46421_;
    private long f_186455_;
+   public boolean restoringBlockSnapshots = false;
+   public boolean captureBlockSnapshots = false;
+   public java.util.ArrayList<net.minecraftforge.common.util.BlockSnapshot> capturedBlockSnapshots = new java.util.ArrayList<>();
+   private final java.util.ArrayList<BlockEntity> freshBlockEntities = new java.util.ArrayList<>();
+   private final java.util.ArrayList<BlockEntity> pendingFreshBlockEntities = new java.util.ArrayList<>();
+   public WorldPaper getWorld() {
+      return worldPaper;
+   }
+
+   public static final boolean DEBUG_ENTITIES = Boolean.getBoolean("debug.entities"); // Paper
+   WorldPaper worldPaper = new WorldPaper();
+   public class WorldPaper {
+
+      public String getName() {
+         return Level.this.m_46472_().toString();
+      }
+   }
+
+   protected final io.papermc.paper.util.math.ThreadUnsafeRandom randomTickRandom = new io.papermc.paper.util.math.ThreadUnsafeRandom(java.util.concurrent.ThreadLocalRandom.current().nextLong()); public net.minecraft.util.RandomSource getThreadUnsafeRandom() { return this.randomTickRandom; } // Pufferfish - move thread unsafe random initialization // Pufferfish - getter
+
+   public final ChunkAccess getChunkIfLoadedImmediately(int x, int z) {
+      return ((ServerLevel)this).f_8547_.getChunkAtIfLoadedImmediately(x, z);
+   }
+
+   public @Nullable LevelChunk getChunkIfLoaded(int x, int z) { // Overridden in WorldServer for ABI compat which has final
+      return ((ServerLevel) this).m_7726_().getChunkAtIfLoadedImmediately(x, z);
+   }
+
+   // Paper start
+   @Override
+   public boolean m_7232_(int chunkX, int chunkZ) {
+      return this.getChunkIfLoaded(chunkX, chunkZ) != null;
+   }
+   // Paper end
+   // Paper start - optimise checkDespawn
+   public final List<net.minecraft.server.level.ServerPlayer> getNearbyPlayers(@Nullable Entity source, double sourceX, double sourceY,
+                                                                               double sourceZ, double maxRange, @Nullable Predicate<Entity> predicate) {
+      LevelChunk chunk;
+      if (maxRange < 0.0 || maxRange >= net.minecraft.server.level.ChunkMap.GENERAL_AREA_MAP_ACCEPTABLE_SEARCH_RANGE ||
+              (chunk = (LevelChunk)this.getChunkIfLoadedImmediately(Mth.m_14107_(sourceX) >> 4, Mth.m_14107_(sourceZ) >> 4)) == null) {
+         return this.getNearbyPlayersSlow(source, sourceX, sourceY, sourceZ, maxRange, predicate);
+      }
+
+      List<net.minecraft.server.level.ServerPlayer> ret = new java.util.ArrayList<>();
+      chunk.getNearestPlayers(sourceX, sourceY, sourceZ, predicate, maxRange, ret);
+      return ret;
+   }
+
+   private List<net.minecraft.server.level.ServerPlayer> getNearbyPlayersSlow(@Nullable Entity source, double sourceX, double sourceY,
+                                                                              double sourceZ, double maxRange, @Nullable Predicate<Entity> predicate) {
+      List<net.minecraft.server.level.ServerPlayer> ret = new java.util.ArrayList<>();
+      double maxRangeSquared = maxRange * maxRange;
+
+      for (net.minecraft.server.level.ServerPlayer player : (List<net.minecraft.server.level.ServerPlayer>)this.m_6907_()) {
+         if ((maxRange < 0.0 || player.m_20275_(sourceX, sourceY, sourceZ) < maxRangeSquared)) {
+            if (predicate == null || predicate.test(player)) {
+               ret.add(player);
+            }
+         }
+      }
+
+      return ret;
+   }
+
+   private net.minecraft.server.level.ServerPlayer getNearestPlayerSlow(@Nullable Entity source, double sourceX, double sourceY,
+                                                                        double sourceZ, double maxRange, @Nullable Predicate<Entity> predicate) {
+      net.minecraft.server.level.ServerPlayer closest = null;
+      double closestRangeSquared = maxRange < 0.0 ? Double.MAX_VALUE : maxRange * maxRange;
+
+      for (net.minecraft.server.level.ServerPlayer player : (List<net.minecraft.server.level.ServerPlayer>)this.m_6907_()) {
+         double distanceSquared = player.m_20275_(sourceX, sourceY, sourceZ);
+         if (distanceSquared < closestRangeSquared && (predicate == null || predicate.test(player))) {
+            closest = player;
+            closestRangeSquared = distanceSquared;
+         }
+      }
+
+      return closest;
+   }
+
+
+   public final net.minecraft.server.level.ServerPlayer getNearestPlayer(@Nullable Entity source, double sourceX, double sourceY,
+                                                                         double sourceZ, double maxRange, @Nullable Predicate<Entity> predicate) {
+      LevelChunk chunk;
+      if (maxRange < 0.0 || maxRange >= net.minecraft.server.level.ChunkMap.GENERAL_AREA_MAP_ACCEPTABLE_SEARCH_RANGE ||
+              (chunk = (LevelChunk)this.getChunkIfLoadedImmediately(Mth.m_14107_(sourceX) >> 4, Mth.m_14107_(sourceZ) >> 4)) == null) {
+         return this.getNearestPlayerSlow(source, sourceX, sourceY, sourceZ, maxRange, predicate);
+      }
+
+      return chunk.findNearestPlayer(sourceX, sourceY, sourceZ, maxRange, predicate);
+   }
+
+   @Override
+   public @Nullable Player m_5788_(double d0, double d1, double d2, double d3, @Nullable Predicate<Entity> predicate) {
+      return this.getNearestPlayer(null, d0, d1, d2, d3, predicate);
+   }
+   // Paper end - optimise checkDespawn
+
+   // Paper start
+   public int wakeupInactiveRemainingAnimals;
+   public int wakeupInactiveRemainingFlying;
+   public int wakeupInactiveRemainingMonsters;
+   public int wakeupInactiveRemainingVillagers;
+   // Paper end
 
    protected Level(WritableLevelData p_220352_, ResourceKey<Level> p_220353_, Holder<DimensionType> p_220354_, Supplier<ProfilerFiller> p_220355_, boolean p_220356_, boolean p_220357_, long p_220358_, int p_220359_) {
+      super(Level.class);
       this.f_46446_ = p_220355_;
       this.f_46442_ = p_220352_;
       this.f_204147_ = p_220354_;
@@ -145,7 +_,7 @@
    }
 
    public boolean m_46739_(BlockPos p_46740_) {
-      return !this.m_151570_(p_46740_) && m_46457_(p_46740_);
+      return p_46740_.isInsideBuildHeightAndWorldBoundsHorizontal(this); // Paper - use better/optimized check
    }
 
    public static boolean m_46741_(BlockPos p_46742_) {
@@ -165,6 +_,15 @@
    }
 
    public LevelChunk m_6325_(int p_46727_, int p_46728_) {
+      // Paper start - make sure loaded chunks get the inlined variant of this function
+      net.minecraft.server.level.ServerChunkCache cps = ((ServerLevel)this).m_7726_();
+      if (cps.f_8330_ == Thread.currentThread()) {
+         LevelChunk ifLoaded = cps.getChunkAtIfLoadedMainThread(p_46727_, p_46728_);
+         if (ifLoaded != null) {
+            return ifLoaded;
+         }
+      }
+      // Paper end - make sure loaded chunks get the inlined variant of this function
       return (LevelChunk)this.m_46819_(p_46727_, p_46728_, ChunkStatus.f_62326_);
    }
 
@@ -190,17 +_,45 @@
       } else {
          LevelChunk levelchunk = this.m_46745_(p_46605_);
          Block block = p_46606_.m_60734_();
+
+         p_46605_ = p_46605_.m_7949_(); // Forge - prevent mutable BlockPos leaks
+         net.minecraftforge.common.util.BlockSnapshot blockSnapshot = null;
+         if (this.captureBlockSnapshots && !this.f_46443_) {
+             blockSnapshot = net.minecraftforge.common.util.BlockSnapshot.create(this.f_46421_, this, p_46605_, p_46607_);
+             this.capturedBlockSnapshots.add(blockSnapshot);
+         }
+
+         BlockState old = m_8055_(p_46605_);
+         int oldLight = old.getLightEmission(this, p_46605_);
+         int oldOpacity = old.m_60739_(this, p_46605_);
+
          BlockState blockstate = levelchunk.m_6978_(p_46605_, p_46606_, (p_46607_ & 64) != 0);
          if (blockstate == null) {
+            if (blockSnapshot != null) this.capturedBlockSnapshots.remove(blockSnapshot);
             return false;
          } else {
             BlockState blockstate1 = this.m_8055_(p_46605_);
-            if ((p_46607_ & 128) == 0 && blockstate1 != blockstate && (blockstate1.m_60739_(this, p_46605_) != blockstate.m_60739_(this, p_46605_) || blockstate1.m_60791_() != blockstate.m_60791_() || blockstate1.m_60787_() || blockstate.m_60787_())) {
+            if ((p_46607_ & 128) == 0 && blockstate1 != blockstate && (blockstate1.m_60739_(this, p_46605_) != oldOpacity || blockstate1.getLightEmission(this, p_46605_) != oldLight || blockstate1.m_60787_() || blockstate.m_60787_())) {
                this.m_46473_().m_6180_("queueCheckLight");
                this.m_7726_().m_7827_().m_7174_(p_46605_);
                this.m_46473_().m_7238_();
             }
 
+            if (blockSnapshot == null) { // Don't notify clients or update physics while capturing blockstates
+               this.markAndNotifyBlock(p_46605_, levelchunk, blockstate, p_46606_, p_46607_, p_46608_);
+            }
+
+            return true;
+         }
+      }
+   }
+
+   // Split off from original setBlockState(BlockPos, BlockState, int, int) method in order to directly send client and physic updates
+   public void markAndNotifyBlock(BlockPos p_46605_, @Nullable LevelChunk levelchunk, BlockState blockstate, BlockState p_46606_, int p_46607_, int p_46608_) {
+      Block block = p_46606_.m_60734_();
+      BlockState blockstate1 = m_8055_(p_46605_);
+      {
+         {
             if (blockstate1 == p_46606_) {
                if (blockstate != blockstate1) {
                   this.m_6550_(p_46605_, blockstate, blockstate1);
@@ -208,6 +_,11 @@
 
                if ((p_46607_ & 2) != 0 && (!this.f_46443_ || (p_46607_ & 4) == 0) && (this.f_46443_ || levelchunk.m_6708_() != null && levelchunk.m_6708_().m_140114_(ChunkHolder.FullChunkStatus.TICKING))) {
                   this.m_7260_(p_46605_, blockstate, p_46606_, p_46607_);
+                  // Paper start - per player view distance - allow block updates for non-ticking chunks in player view distance
+                  // if copied from above
+               } else if ((p_46607_ & 2) != 0 && (!this.f_46443_ || (p_46607_ & 4) == 0) && (this.f_46443_ || levelchunk == null || ((ServerLevel)this).m_7726_().f_8325_.playerChunkManager.broadcastMap.getObjectsInRange(MCUtil.getCoordinateKey(p_46605_)) != null)) { // Paper - replace old player chunk management
+                  ((ServerLevel)this).m_7726_().m_8450_(p_46605_);
+                  // Paper end - per player view distance
                }
 
                if ((p_46607_ & 1) != 0) {
@@ -225,9 +_,8 @@
                }
 
                this.m_6559_(p_46605_, blockstate, blockstate1);
+               p_46606_.onBlockStateChange(this, p_46605_, blockstate);
             }
-
-            return true;
          }
       }
    }
@@ -277,6 +_,7 @@
    }
 
    public void m_46672_(BlockPos p_46673_, Block p_46674_) {
+      net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(this, p_46673_, this.m_8055_(p_46673_), java.util.EnumSet.allOf(Direction.class), false).isCanceled();
    }
 
    public void m_46590_(BlockPos p_46591_, Block p_46592_, Direction p_46593_) {
@@ -311,6 +_,27 @@
       return this.m_7726_().m_7827_();
    }
 
+   @Override
+   public void getEntities(Entity except, AABB box, Predicate<? super Entity> predicate, List<Entity> into) {
+      ((ServerLevel)this).getEntityLookup().getEntities(except, box, into, predicate);
+   }
+
+   @Override
+   public void getHardCollidingEntities(Entity except, AABB box, Predicate<? super Entity> predicate, List<Entity> into) {
+      ((ServerLevel)this).getEntityLookup().getHardCollidingEntities(except, box, into, predicate);
+   }
+
+   @Override
+   @Nullable
+   public final BlockState getBlockStateIfLoaded(BlockPos blockposition) {
+      if (!m_46739_(blockposition)) {
+         return Blocks.f_50016_.m_49966_();
+      }
+      ChunkAccess chunk = this.getChunkIfLoadedImmediately(blockposition.m_123341_() >> 4, blockposition.m_123343_() >> 4);
+
+      return chunk == null ? null : chunk.m_8055_(blockposition);
+   }
+
    public BlockState m_8055_(BlockPos p_46732_) {
       if (this.m_151570_(p_46732_)) {
          return Blocks.f_50626_.m_49966_();
@@ -377,38 +_,69 @@
       (this.f_151504_ ? this.f_151503_ : this.f_151512_).add(p_151526_);
    }
 
+   public void addFreshBlockEntities(java.util.Collection<BlockEntity> beList) {
+      if (this.f_151504_) {
+         this.pendingFreshBlockEntities.addAll(beList);
+      } else {
+         this.freshBlockEntities.addAll(beList);
+      }
+   }
+
+   private int tileTickPosition;
    protected void m_46463_() {
-      ProfilerFiller profilerfiller = this.m_46473_();
-      profilerfiller.m_6180_("blockEntities");
+      ProfilerFiller gameprofilerfiller = this.m_46473_();
+
+      gameprofilerfiller.m_6180_("blockEntities");
       this.f_151504_ = true;
       if (!this.f_151503_.isEmpty()) {
          this.f_151512_.addAll(this.f_151503_);
          this.f_151503_.clear();
       }
-
-      Iterator<TickingBlockEntity> iterator = this.f_151512_.iterator();
-
-      while(iterator.hasNext()) {
-         TickingBlockEntity tickingblockentity = iterator.next();
+      // Spigot start
+      // Iterator iterator = this.blockEntityTickers.iterator();
+      int tilesThisCycle = 0;
+      var toRemove = new it.unimi.dsi.fastutil.objects.ObjectOpenCustomHashSet<TickingBlockEntity>(net.minecraft.Util.m_137583_()); // Paper - use removeAll
+      toRemove.add(null);
+      for (tileTickPosition = 0; tileTickPosition < this.f_151512_.size(); tileTickPosition++) { // Paper - Disable tick limiters
+         this.tileTickPosition = (this.tileTickPosition < this.f_151512_.size()) ? this.tileTickPosition : 0;
+         TickingBlockEntity tickingblockentity = (TickingBlockEntity) this.f_151512_.get(tileTickPosition);
+
          if (tickingblockentity.m_142220_()) {
-            iterator.remove();
+            // Spigot start
+            tilesThisCycle--;
+            toRemove.add(tickingblockentity); // Paper - use removeAll
+            // Spigot end
          } else if (this.m_220393_(tickingblockentity.m_142689_())) {
             tickingblockentity.m_142224_();
+            // Paper start - execute chunk tasks during tick
+            if ((this.tileTickPosition & 7) == 0) {
+               MinecraftServer.getServer().executeMidTickTasks();
+            }
+            // Paper end - execute chunk tasks during tick
          }
       }
+      this.f_151512_.removeAll(toRemove);
 
       this.f_151504_ = false;
-      profilerfiller.m_7238_();
+      gameprofilerfiller.m_7238_();
    }
 
    public <T extends Entity> void m_46653_(Consumer<T> p_46654_, T p_46655_) {
       try {
+         net.minecraftforge.server.timings.TimeTracker.ENTITY_UPDATE.trackStart(p_46655_);
          p_46654_.accept(p_46655_);
+         MinecraftServer.getServer().executeMidTickTasks(); // Paper - execute chunk tasks mid tick
       } catch (Throwable throwable) {
          CrashReport crashreport = CrashReport.m_127521_(throwable, "Ticking entity");
          CrashReportCategory crashreportcategory = crashreport.m_127514_("Entity being ticked");
          p_46655_.m_7976_(crashreportcategory);
+         if (net.minecraftforge.common.ForgeConfig.SERVER.removeErroringEntities.get()) {
+            com.mojang.logging.LogUtils.getLogger().error("{}", crashreport.m_127526_());
+            p_46655_.m_146870_();
+         } else
          throw new ReportedException(crashreport);
+      } finally {
+         net.minecraftforge.server.timings.TimeTracker.ENTITY_UPDATE.trackEnd(p_46655_);
       }
    }
 
@@ -434,6 +_,7 @@
 
    public Explosion m_7703_(@Nullable Entity p_46526_, @Nullable DamageSource p_46527_, @Nullable ExplosionDamageCalculator p_46528_, double p_46529_, double p_46530_, double p_46531_, float p_46532_, boolean p_46533_, Explosion.BlockInteraction p_46534_) {
       Explosion explosion = new Explosion(this, p_46526_, p_46527_, p_46528_, p_46529_, p_46530_, p_46531_, p_46532_, p_46533_, p_46534_);
+      if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
       explosion.m_46061_();
       explosion.m_46075_(true);
       return explosion;
@@ -446,7 +_,7 @@
       if (this.m_151570_(p_46716_)) {
          return null;
       } else {
-         return !this.f_46443_ && Thread.currentThread() != this.f_46423_ ? null : this.m_46745_(p_46716_).m_5685_(p_46716_, LevelChunk.EntityCreationType.IMMEDIATE);
+         return (!this.f_46443_ && !io.papermc.paper.util.TickThread.isTickThread() ? null : this.m_46745_(p_46716_).m_5685_(p_46716_, LevelChunk.EntityCreationType.IMMEDIATE));
       }
    }
 
@@ -461,6 +_,7 @@
       if (!this.m_151570_(p_46748_)) {
          this.m_46745_(p_46748_).m_8114_(p_46748_);
       }
+      this.m_46717_(p_46748_, m_8055_(p_46748_).m_60734_()); //Notify neighbors of changes
    }
 
    public boolean m_46749_(BlockPos p_46750_) {
@@ -526,41 +_,29 @@
    public List<Entity> m_6249_(@Nullable Entity p_46536_, AABB p_46537_, Predicate<? super Entity> p_46538_) {
       this.m_46473_().m_6174_("getEntities");
       List<Entity> list = Lists.newArrayList();
-      this.m_142646_().m_142232_(p_46537_, (p_151522_) -> {
-         if (p_151522_ != p_46536_ && p_46538_.test(p_151522_)) {
-            list.add(p_151522_);
-         }
-
-         if (p_151522_ instanceof EnderDragon) {
-            for(EnderDragonPart enderdragonpart : ((EnderDragon)p_151522_).m_31156_()) {
-               if (p_151522_ != p_46536_ && p_46538_.test(enderdragonpart)) {
-                  list.add(enderdragonpart);
-               }
-            }
-         }
-
-      });
+      ((ServerLevel)this).getEntityLookup().getEntities(p_46536_, p_46537_, list, p_46538_); // Paper - optimise this call
       return list;
    }
 
    public <T extends Entity> List<T> m_142425_(EntityTypeTest<Entity, T> p_151528_, AABB p_151529_, Predicate<? super T> p_151530_) {
       this.m_46473_().m_6174_("getEntities");
       List<T> list = Lists.newArrayList();
-      this.m_142646_().m_142137_(p_151528_, p_151529_, (p_151539_) -> {
-         if (p_151530_.test(p_151539_)) {
-            list.add(p_151539_);
-         }
-
-         if (p_151539_ instanceof EnderDragon enderdragon) {
-            for(EnderDragonPart enderdragonpart : enderdragon.m_31156_()) {
-               T t = p_151528_.m_141992_(enderdragonpart);
-               if (t != null && p_151530_.test(t)) {
-                  list.add(t);
-               }
-            }
-         }
-
-      });
+      // Paper start - optimise this call
+      if (p_151528_ instanceof net.minecraft.world.entity.EntityType) {
+         ((ServerLevel) this).getEntityLookup().getEntities((net.minecraft.world.entity.EntityType)p_151528_, p_151529_, list, p_151530_);
+      } else {
+         Predicate<? super T> test = (obj) -> {
+            return p_151528_.m_141992_(obj) != null;
+         };
+         p_151530_ = p_151530_ == null ? test : test.and((Predicate)p_151530_);
+         Class base;
+         if (p_151528_ == null || (base = p_151528_.m_142225_()) == null || base == Entity.class) {
+            ((ServerLevel) this).getEntityLookup().getEntities((Entity) null, p_151529_, (List)list, (Predicate)p_151530_);
+         } else {
+            ((ServerLevel) this).getEntityLookup().getEntities(base, null, p_151529_, (List)list, (Predicate)p_151530_); // Paper - optimise this call
+         }
+      }
+      // Paper end - optimise this call
       return list;
    }
 
@@ -572,6 +_,7 @@
          this.m_46745_(p_151544_).m_8092_(true);
       }
 
+      this.m_46717_(p_151544_, m_8055_(p_151544_).m_60734_()); //Notify neighbors of changes
    }
 
    public int m_5736_() {
@@ -616,7 +_,7 @@
    public int m_46681_(BlockPos p_46682_, Direction p_46683_) {
       BlockState blockstate = this.m_8055_(p_46682_);
       int i = blockstate.m_60746_(this, p_46682_, p_46683_);
-      return blockstate.m_60796_(this, p_46682_) ? Math.max(i, this.m_46751_(p_46682_)) : i;
+      return blockstate.shouldCheckWeakPower(this, p_46682_, p_46683_) ? Math.max(i, this.m_46751_(p_46682_)) : i;
    }
 
    public boolean m_46753_(BlockPos p_46754_) {
@@ -769,16 +_,15 @@
    public abstract Scoreboard m_6188_();
 
    public void m_46717_(BlockPos p_46718_, Block p_46719_) {
-      for(Direction direction : Direction.Plane.HORIZONTAL) {
+      for(Direction direction : Direction.values()) {
          BlockPos blockpos = p_46718_.m_121945_(direction);
          if (this.m_46805_(blockpos)) {
             BlockState blockstate = this.m_8055_(blockpos);
-            if (blockstate.m_60713_(Blocks.f_50328_)) {
-               this.m_213960_(blockstate, blockpos, p_46719_, p_46718_, false);
-            } else if (blockstate.m_60796_(this, blockpos)) {
+            blockstate.onNeighborChange(this, blockpos, p_46718_);
+            if (blockstate.m_60796_(this, blockpos)) {
                blockpos = blockpos.m_121945_(direction);
                blockstate = this.m_8055_(blockpos);
-               if (blockstate.m_60713_(Blocks.f_50328_)) {
+               if (blockstate.getWeakChanges(this, blockpos)) {
                   this.m_213960_(blockstate, blockpos, p_46719_, p_46718_, false);
                }
             }
@@ -844,9 +_,18 @@
    public abstract RecipeManager m_7465_();
 
    public BlockPos m_46496_(int p_46497_, int p_46498_, int p_46499_, int p_46500_) {
+      // Paper start - allow use of mutable pos
+      BlockPos.MutableBlockPos ret = new BlockPos.MutableBlockPos();
+      this.getRandomBlockPosition(p_46497_, p_46498_, p_46499_, p_46500_, ret);
+      return ret.m_7949_();
+   }
+   public final BlockPos.MutableBlockPos getRandomBlockPosition(int x, int y, int z, int l, BlockPos.MutableBlockPos out) {
+      // Paper end
       this.f_46435_ = this.f_46435_ * 3 + 1013904223;
-      int i = this.f_46435_ >> 2;
-      return new BlockPos(p_46497_ + (i & 15), p_46498_ + (i >> 16 & p_46500_), p_46499_ + (i >> 8 & 15));
+      int i1 = this.f_46435_ >> 2;
+
+      out.m_122178_(x + (i1 & 15), y + (i1 >> 16 & l), z + (i1 >> 8 & 15)); // Paper - change to setValues call
+      return out; // Paper
    }
 
    public boolean m_7441_() {
@@ -863,6 +_,18 @@
 
    public BiomeManager m_7062_() {
       return this.f_46420_;
+   }
+
+   private double maxEntityRadius = 2.0D;
+   @Override
+   public double getMaxEntityRadius() {
+      return maxEntityRadius;
+   }
+   @Override
+   public double increaseMaxEntityRadius(double value) {
+      if (value > maxEntityRadius)
+         maxEntityRadius = value;
+      return maxEntityRadius;
    }
 
    public final boolean m_46659_() {
