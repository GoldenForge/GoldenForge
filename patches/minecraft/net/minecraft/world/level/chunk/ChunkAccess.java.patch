--- a/net/minecraft/world/level/chunk/ChunkAccess.java
+++ b/net/minecraft/world/level/chunk/ChunkAccess.java
@@ -3,6 +_,7 @@
 import com.google.common.collect.Maps;
 import com.google.common.collect.Sets;
 import com.mojang.logging.LogUtils;
+import io.papermc.paper.async_save.AsyncChunkSaveData;
 import it.unimi.dsi.fastutil.longs.LongOpenHashSet;
 import it.unimi.dsi.fastutil.longs.LongSet;
 import it.unimi.dsi.fastutil.shorts.ShortArrayList;
@@ -38,6 +_,7 @@
 import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.state.BlockState;
+import net.minecraft.world.level.chunk.storage.ChunkSerializer;
 import net.minecraft.world.level.gameevent.GameEventDispatcher;
 import net.minecraft.world.level.levelgen.BelowZeroRetrogen;
 import net.minecraft.world.level.levelgen.Heightmap;
@@ -56,7 +_,7 @@
    protected final ShortList[] f_187602_;
    protected volatile boolean f_187603_;
    private volatile boolean f_187614_;
-   protected final ChunkPos f_187604_;
+   protected final ChunkPos f_187604_; public final long coordinateKey; public final int locX; public final int locZ; // Paper - cache coordinate key
    private long f_187615_;
    /** @deprecated */
    @Nullable
@@ -74,9 +_,64 @@
    protected final Map<BlockPos, BlockEntity> f_187610_ = Maps.newHashMap();
    protected final LevelHeightAccessor f_187611_;
    protected final LevelChunkSection[] f_187612_;
+   @Nullable
+   public AsyncChunkSaveData asyncsavedata;
+
+   // Paper start - rewrite light engine
+   private volatile ca.spottedleaf.starlight.common.light.SWMRNibbleArray[] blockNibbles;
+
+   private volatile ca.spottedleaf.starlight.common.light.SWMRNibbleArray[] skyNibbles;
+
+   private volatile boolean[] skyEmptinessMap;
+
+   private volatile boolean[] blockEmptinessMap;
+
+   public ca.spottedleaf.starlight.common.light.SWMRNibbleArray[] getBlockNibbles() {
+      return this.blockNibbles;
+   }
+
+   public void setBlockNibbles(final ca.spottedleaf.starlight.common.light.SWMRNibbleArray[] nibbles) {
+      this.blockNibbles = nibbles;
+   }
+
+   public ca.spottedleaf.starlight.common.light.SWMRNibbleArray[] getSkyNibbles() {
+      return this.skyNibbles;
+   }
+
+   public void setSkyNibbles(final ca.spottedleaf.starlight.common.light.SWMRNibbleArray[] nibbles) {
+      this.skyNibbles = nibbles;
+   }
+
+   public boolean[] getSkyEmptinessMap() {
+      return this.skyEmptinessMap;
+   }
+
+   public void setSkyEmptinessMap(final boolean[] emptinessMap) {
+      this.skyEmptinessMap = emptinessMap;
+   }
+
+   public boolean[] getBlockEmptinessMap() {
+      return this.blockEmptinessMap;
+   }
+
+   public void setBlockEmptinessMap(final boolean[] emptinessMap) {
+      this.blockEmptinessMap = emptinessMap;
+   }
+   // Paper end - rewrite light engine
 
    public ChunkAccess(ChunkPos p_187621_, UpgradeData p_187622_, LevelHeightAccessor p_187623_, Registry<Biome> p_187624_, long p_187625_, @Nullable LevelChunkSection[] p_187626_, @Nullable BlendingData p_187627_) {
-      this.f_187604_ = p_187621_;
+      // Paper start - rewrite light engine
+      if (!(this instanceof ImposterProtoChunk)) {
+         this.setBlockNibbles(ca.spottedleaf.starlight.common.light.StarLightEngine.getFilledEmptyLight(p_187623_));
+         this.setSkyNibbles(ca.spottedleaf.starlight.common.light.StarLightEngine.getFilledEmptyLight(p_187623_));
+      }
+      // Paper end - rewrite light engine
+      if (p_187621_ != null) {
+         this.locX = p_187621_.f_45578_; this.locZ = p_187621_.f_45579_; // Paper - reduce need for field lookups
+      } else {
+         this.locX = 0; this.locZ = 0;
+      }
+      this.f_187604_ = p_187621_; this.coordinateKey = ChunkPos.m_45589_(locX, locZ); // Paper - cache long key
       this.f_187606_ = p_187622_;
       this.f_187611_ = p_187623_;
       this.f_187612_ = new LevelChunkSection[p_187623_.m_151559_()];
@@ -106,7 +_,7 @@
    public GameEventDispatcher m_142336_(int p_156113_) {
       return GameEventDispatcher.f_157829_;
    }
-
+   public abstract BlockState getBlockState(final int x, final int y, final int z); // Paper
    @Nullable
    public abstract BlockState m_6978_(BlockPos p_62087_, BlockState p_62088_, boolean p_62089_);
 
@@ -407,4 +_,9 @@
 
    public static record TicksToSave(SerializableTickContainer<Block> f_187680_, SerializableTickContainer<Fluid> f_187681_) {
    }
+
+   public void setLastSaved(long ticks) {} // Paper
+
+   @Nullable
+   public net.minecraft.world.level.LevelAccessor getWorldForge() { return null; }
 }
