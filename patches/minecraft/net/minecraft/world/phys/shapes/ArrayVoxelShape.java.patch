--- a/net/minecraft/world/phys/shapes/ArrayVoxelShape.java
+++ b/net/minecraft/world/phys/shapes/ArrayVoxelShape.java
@@ -1,5 +_,6 @@
 package net.minecraft.world.phys.shapes;
 
+import it.unimi.dsi.fastutil.doubles.AbstractDoubleList;
 import it.unimi.dsi.fastutil.doubles.DoubleArrayList;
 import it.unimi.dsi.fastutil.doubles.DoubleList;
 import java.util.Arrays;
@@ -15,7 +_,8 @@
       this(p_82572_, (DoubleList)DoubleArrayList.wrap(Arrays.copyOf(p_82573_, p_82572_.m_82828_() + 1)), (DoubleList)DoubleArrayList.wrap(Arrays.copyOf(p_82574_, p_82572_.m_82845_() + 1)), (DoubleList)DoubleArrayList.wrap(Arrays.copyOf(p_82575_, p_82572_.m_82852_() + 1)));
    }
 
-   ArrayVoxelShape(DiscreteVoxelShape p_82567_, DoubleList p_82568_, DoubleList p_82569_, DoubleList p_82570_) {
+   public ArrayVoxelShape(DiscreteVoxelShape p_82567_, DoubleList p_82568_, DoubleList p_82569_, DoubleList p_82570_) { // Paper - optimise collisions - public
+      // Paper end - optimise multi-aabb shapes
       super(p_82567_);
       int i = p_82567_.m_82828_() + 1;
       int j = p_82567_.m_82845_() + 1;
@@ -27,6 +_,7 @@
       } else {
          throw (IllegalArgumentException)Util.m_137570_(new IllegalArgumentException("Lengths of point arrays must be consistent with the size of the VoxelShape."));
       }
+      this.initCache(); // Paper - optimise collisions
    }
 
    protected DoubleList m_7700_(Direction.Axis p_82577_) {
