--- a/net/minecraft/world/entity/ai/goal/GoalSelector.java
+++ b/net/minecraft/world/entity/ai/goal/GoalSelector.java
@@ -10,6 +_,8 @@
 import java.util.Set;
 import java.util.function.Supplier;
 import java.util.stream.Stream;
+
+import it.unimi.dsi.fastutil.objects.ObjectLinkedOpenHashSet;
 import net.minecraft.util.profiling.ProfilerFiller;
 import org.slf4j.Logger;
 
@@ -25,11 +_,12 @@
       }
    };
    private final Map<Goal.Flag, WrappedGoal> f_25344_ = new EnumMap<>(Goal.Flag.class);
-   private final Set<WrappedGoal> f_25345_ = Sets.newLinkedHashSet();
+   private final Set<WrappedGoal> f_25345_ = new ObjectLinkedOpenHashSet<>(Sets.newLinkedHashSet());
    private final Supplier<ProfilerFiller> f_25346_;
    private final EnumSet<Goal.Flag> f_25347_ = EnumSet.noneOf(Goal.Flag.class);
    private int f_148095_;
    private int f_25348_ = 3;
+   private int curRate;
 
    public GoalSelector(Supplier<ProfilerFiller> p_25351_) {
       this.f_25346_ = p_25351_;
@@ -52,6 +_,24 @@
          return p_25367_.m_26015_() == p_25364_;
       });
    }
+
+   // Paper start
+   public boolean inactiveTick(int tickRate, boolean inactive) { // Pufferfish start
+      if (inactive && !org.goldenforge.TempConfig.dearEnabled) tickRate = 4; // reset to Paper's
+      tickRate = Math.min(tickRate, this.f_25348_);
+      this.curRate++;
+      return this.curRate % tickRate == 0;
+      // Pufferfish end
+   }
+   public boolean hasTasks() {
+      for (WrappedGoal task : this.f_25345_) {
+         if (task.m_7620_()) {
+            return true;
+         }
+      }
+      return false;
+   }
+   // Paper end
 
    private static boolean m_186075_(WrappedGoal p_186076_, EnumSet<Goal.Flag> p_186077_) {
       for(Goal.Flag goal$flag : p_186076_.m_7684_()) {
