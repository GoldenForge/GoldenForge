--- a/net/minecraft/world/entity/ai/village/poi/PoiSection.java
+++ b/net/minecraft/world/entity/ai/village/poi/PoiSection.java
@@ -26,9 +_,10 @@
 public class PoiSection {
    private static final Logger LOGGER = LogUtils.getLogger();
    private final Short2ObjectMap<PoiRecord> records = new Short2ObjectOpenHashMap<>();
-   private final Map<Holder<PoiType>, Set<PoiRecord>> byType = Maps.newHashMap();
+   private final Map<Holder<PoiType>, Set<PoiRecord>> byType = Maps.newHashMap(); public final Map<Holder<PoiType>, Set<PoiRecord>> getData() { return this.byType; } // Paper - public accessor
    private final Runnable setDirty;
    private boolean isValid;
+   public final Optional<PoiSection> noAllocateOptional = Optional.of(this); // Paper - rewrite chunk system
 
    public static Codec<PoiSection> codec(Runnable p_27296_) {
       return RecordCodecBuilder.<PoiSection>create((p_27299_) -> {
@@ -45,6 +_,12 @@
    public PoiSection(Runnable p_27267_) {
       this(p_27267_, true, ImmutableList.of());
    }
+
+   // Paper start - isEmpty
+   public boolean isEmpty() {
+      return this.isValid && this.records.isEmpty() && this.byType.isEmpty();
+   }
+   // Paper end
 
    private PoiSection(Runnable p_27269_, boolean p_27270_, List<PoiRecord> p_27271_) {
       this.setDirty = p_27269_;
