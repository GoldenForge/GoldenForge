--- a/net/minecraft/server/players/PlayerList.java
+++ b/net/minecraft/server/players/PlayerList.java
@@ -20,6 +_,8 @@
 import java.util.function.Function;
 import java.util.function.Predicate;
 import javax.annotation.Nullable;
+
+import io.papermc.paper.util.MCUtil;
 import net.minecraft.ChatFormatting;
 import net.minecraft.FileUtil;
 import net.minecraft.commands.CommandSourceStack;
@@ -30,6 +_,7 @@
 import net.minecraft.nbt.NbtOps;
 import net.minecraft.network.Connection;
 import net.minecraft.network.FriendlyByteBuf;
+import net.minecraft.network.PacketSendListener;
 import net.minecraft.network.chat.ChatSender;
 import net.minecraft.network.chat.ChatType;
 import net.minecraft.network.chat.Component;
@@ -37,31 +_,7 @@
 import net.minecraft.network.chat.OutgoingPlayerChatMessage;
 import net.minecraft.network.chat.PlayerChatMessage;
 import net.minecraft.network.protocol.Packet;
-import net.minecraft.network.protocol.game.ClientboundChangeDifficultyPacket;
-import net.minecraft.network.protocol.game.ClientboundCustomPayloadPacket;
-import net.minecraft.network.protocol.game.ClientboundEntityEventPacket;
-import net.minecraft.network.protocol.game.ClientboundGameEventPacket;
-import net.minecraft.network.protocol.game.ClientboundInitializeBorderPacket;
-import net.minecraft.network.protocol.game.ClientboundLoginPacket;
-import net.minecraft.network.protocol.game.ClientboundPlayerAbilitiesPacket;
-import net.minecraft.network.protocol.game.ClientboundPlayerInfoPacket;
-import net.minecraft.network.protocol.game.ClientboundRespawnPacket;
-import net.minecraft.network.protocol.game.ClientboundSetBorderCenterPacket;
-import net.minecraft.network.protocol.game.ClientboundSetBorderLerpSizePacket;
-import net.minecraft.network.protocol.game.ClientboundSetBorderSizePacket;
-import net.minecraft.network.protocol.game.ClientboundSetBorderWarningDelayPacket;
-import net.minecraft.network.protocol.game.ClientboundSetBorderWarningDistancePacket;
-import net.minecraft.network.protocol.game.ClientboundSetCarriedItemPacket;
-import net.minecraft.network.protocol.game.ClientboundSetChunkCacheRadiusPacket;
-import net.minecraft.network.protocol.game.ClientboundSetDefaultSpawnPositionPacket;
-import net.minecraft.network.protocol.game.ClientboundSetExperiencePacket;
-import net.minecraft.network.protocol.game.ClientboundSetPlayerTeamPacket;
-import net.minecraft.network.protocol.game.ClientboundSetSimulationDistancePacket;
-import net.minecraft.network.protocol.game.ClientboundSetTimePacket;
-import net.minecraft.network.protocol.game.ClientboundSoundPacket;
-import net.minecraft.network.protocol.game.ClientboundUpdateMobEffectPacket;
-import net.minecraft.network.protocol.game.ClientboundUpdateRecipesPacket;
-import net.minecraft.network.protocol.game.ClientboundUpdateTagsPacket;
+import net.minecraft.network.protocol.game.*;
 import net.minecraft.resources.ResourceKey;
 import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.PlayerAdvancements;
@@ -114,6 +_,7 @@
    private final IpBanList f_11199_ = new IpBanList(f_11190_);
    private final ServerOpList f_11200_ = new ServerOpList(f_11191_);
    private final UserWhiteList f_11201_ = new UserWhiteList(f_11192_);
+   private final Map<UUID, ServerPlayer> pendingPlayers = Maps.newHashMap(); // Paper
    private final Map<UUID, ServerStatsCounter> f_11202_ = Maps.newHashMap();
    private final Map<UUID, PlayerAdvancements> f_11203_ = Maps.newHashMap();
    private final PlayerDataStorage f_11204_;
@@ -125,6 +_,7 @@
    private boolean f_11209_;
    private static final boolean f_143988_ = false;
    private int f_11210_;
+   private final List<ServerPlayer> playersView = java.util.Collections.unmodifiableList(f_11196_);
 
    public PlayerList(MinecraftServer p_203842_, RegistryAccess.Frozen p_203843_, PlayerDataStorage p_203844_, int p_203845_) {
       this.f_11195_ = p_203842_;
@@ -134,6 +_,12 @@
    }
 
    public void m_11261_(Connection p_11262_, ServerPlayer p_11263_) {
+      p_11263_.isRealPlayer = true; // Paper - Chunk priority
+      ServerPlayer prev = pendingPlayers.put(p_11263_.m_20148_(), p_11263_);// Paper
+      if (prev != null) {
+         disconnectPendingPlayer(prev);
+      }
+      p_11263_.networkManager = p_11262_; // Paper
       GameProfile gameprofile = p_11263_.m_36316_();
       GameProfileCache gameprofilecache = this.f_11195_.m_129927_();
       Optional<GameProfile> optional = gameprofilecache.m_11002_(gameprofile.getId());
@@ -151,15 +_,21 @@
       }
 
       p_11263_.m_143425_(serverlevel1);
-      String s1 = "local";
+      // Paper start - make s1 final
+      final String s1;
+
       if (p_11262_.m_129523_() != null) {
          s1 = p_11262_.m_129523_().toString();
+      } else {
+         s1 = "local";
       }
+      // Paper end
 
       f_11188_.info("{}[{}] logged in with entity id {} at ({}, {}, {})", p_11263_.m_7755_().getString(), s1, p_11263_.m_19879_(), p_11263_.m_20185_(), p_11263_.m_20186_(), p_11263_.m_20189_());
       LevelData leveldata = serverlevel1.m_6106_();
       p_11263_.m_143427_(compoundtag);
       ServerGamePacketListenerImpl servergamepacketlistenerimpl = new ServerGamePacketListenerImpl(this.f_11195_, p_11262_, p_11263_);
+      net.minecraftforge.network.NetworkHooks.sendMCRegistryPackets(p_11262_, "PLAY_TO_CLIENT");
       GameRules gamerules = serverlevel1.m_46469_();
       boolean flag = gamerules.m_46207_(GameRules.f_46156_);
       boolean flag1 = gamerules.m_46207_(GameRules.f_46145_);
@@ -168,6 +_,7 @@
       servergamepacketlistenerimpl.m_9829_(new ClientboundChangeDifficultyPacket(leveldata.m_5472_(), leveldata.m_5474_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundPlayerAbilitiesPacket(p_11263_.m_150110_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundSetCarriedItemPacket(p_11263_.m_150109_().f_35977_));
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, p_11263_));
       servergamepacketlistenerimpl.m_9829_(new ClientboundUpdateRecipesPacket(this.f_11195_.m_129894_().m_44051_()));
       servergamepacketlistenerimpl.m_9829_(new ClientboundUpdateTagsPacket(TagNetworkSerialization.m_203950_(this.f_11206_)));
       this.m_11289_(p_11263_);
@@ -175,6 +_,36 @@
       p_11263_.m_8952_().m_12789_(p_11263_);
       this.m_11273_(serverlevel1.m_6188_(), p_11263_);
       this.f_11195_.m_129929_();
+
+      ServerLevel finalWorldserver = serverlevel1;
+
+      int chunkX = p_11263_.m_146903_() >> 4;
+      int chunkZ = p_11263_.m_146907_() >> 4;
+      final net.minecraft.world.level.ChunkPos pos = new net.minecraft.world.level.ChunkPos(chunkX, chunkZ);
+      net.minecraft.server.level.ChunkMap playerChunkMap = serverlevel1.m_7726_().f_8325_;
+      net.minecraft.server.level.DistanceManager distanceManager = playerChunkMap.f_140145_;
+      distanceManager.m_140792_(net.minecraft.server.level.TicketType.LOGIN, pos, 31, pos.m_45588_());
+      serverlevel1.m_7726_().markAreaHighPriority(pos, 28, 3); // Paper - Chunk priority
+      serverlevel1.m_7726_().getChunkAtAsynchronously(chunkX, chunkZ, true, false).thenApply(chunk -> { // Paper - Chunk priority
+         net.minecraft.server.level.ChunkHolder updatingChunk = playerChunkMap.m_140174_(pos.m_45588_());
+         if (updatingChunk != null) {
+            return updatingChunk.m_140073_();
+         } else {
+            return java.util.concurrent.CompletableFuture.completedFuture(chunk);
+         }
+      }).thenAccept(chunk -> {
+         servergamepacketlistenerimpl.playerJoinReady = () -> {
+            postChunkLoadJoin(
+                    p_11263_, finalWorldserver, p_11262_, servergamepacketlistenerimpl,
+                    compoundtag, s1, s
+            );
+         };
+      });
+
+   }
+
+   private void postChunkLoadJoin(ServerPlayer p_11263_, ServerLevel serverlevel1, Connection networkmanager, ServerGamePacketListenerImpl servergamepacketlistenerimpl, CompoundTag compoundtag, String s1, String s) {
+      pendingPlayers.remove(p_11263_.m_20148_(), p_11263_);
       MutableComponent mutablecomponent;
       if (p_11263_.m_36316_().getName().equalsIgnoreCase(s)) {
          mutablecomponent = Component.m_237110_("multiplayer.player.joined", p_11263_.m_5446_());
@@ -240,7 +_,21 @@
       }
 
       p_11263_.m_143429_();
-   }
+      MinecraftServer.getServer().execute(() -> net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedIn( p_11263_ )); // Goldenforge: fire event on main
+   }
+
+      public ServerPlayer getActivePlayer(UUID uuid) {
+      ServerPlayer player = this.f_11197_.get(uuid);
+      return player != null ? player : pendingPlayers.get(uuid);
+   }
+   void disconnectPendingPlayer(ServerPlayer entityplayer) {
+      Component msg = Component.m_237115_("multiplayer.disconnect.duplicate_login");
+      entityplayer.networkManager.m_243124_(new ClientboundDisconnectPacket(msg), PacketSendListener.m_243092_(() -> {
+         entityplayer.networkManager.m_129507_(msg);
+         entityplayer.networkManager = null;
+      }));
+   }
+
 
    protected void m_11273_(ServerScoreboard p_11274_, ServerPlayer p_11275_) {
       Set<Objective> set = Sets.newHashSet();
@@ -300,6 +_,7 @@
          compoundtag1 = compoundtag;
          p_11225_.m_20258_(compoundtag);
          f_11188_.debug("loading single player");
+         net.minecraftforge.event.ForgeEventFactory.firePlayerLoadingEvent(p_11225_, this.f_11204_, p_11225_.m_20148_().toString());
       } else {
          compoundtag1 = this.f_11204_.m_78435_(p_11225_);
       }
@@ -308,6 +_,8 @@
    }
 
    protected void m_6765_(ServerPlayer p_11277_) {
+      if (p_11277_.f_8906_ == null) return;
+      p_11277_.lastSave = MinecraftServer.currentTick; // Paper
       this.f_11204_.m_78433_(p_11277_);
       ServerStatsCounter serverstatscounter = this.f_11202_.get(p_11277_.m_20148_());
       if (serverstatscounter != null) {
@@ -322,6 +_,7 @@
    }
 
    public void m_11286_(ServerPlayer p_11287_) {
+      net.minecraftforge.event.ForgeEventFactory.firePlayerLoggedOut(p_11287_);
       ServerLevel serverlevel = p_11287_.m_9236_();
       p_11287_.m_36220_(Stats.f_12989_);
       this.m_6765_(p_11287_);
@@ -349,11 +_,40 @@
          this.f_11203_.remove(uuid);
       }
 
+      // Paper start
+      serverplayer = pendingPlayers.get(uuid);
+      if (serverplayer == p_11287_) {
+         pendingPlayers.remove(uuid);
+      }
+      p_11287_.networkManager = null;
+      // Paper end
+
       this.m_11268_(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.REMOVE_PLAYER, p_11287_));
    }
 
    @Nullable
    public Component m_6418_(SocketAddress p_11257_, GameProfile p_11258_) {
+      UUID uuid = UUIDUtil.m_235875_(p_11258_);
+
+      List<ServerPlayer> list = Lists.newArrayList();
+
+      ServerPlayer entityplayer;
+
+      for (int i = 0; i < this.f_11196_.size(); ++i) {
+         entityplayer = (ServerPlayer) this.f_11196_.get(i);
+         if (entityplayer.m_20148_().equals(uuid) || (false && entityplayer.m_36316_().getName().equalsIgnoreCase(p_11258_.getName()))) { // Paper - validate usernames
+            list.add(entityplayer);
+         }
+      }
+
+      // Paper start - check pending players too
+      entityplayer = pendingPlayers.get(uuid);
+      if (entityplayer != null) {
+         this.pendingPlayers.remove(uuid);
+         disconnectPendingPlayer(entityplayer);
+      }
+      // Paper end
+
       if (this.f_11198_.m_11406_(p_11258_)) {
          UserBanListEntry userbanlistentry = this.f_11198_.m_11388_(p_11258_);
          MutableComponent mutablecomponent1 = Component.m_237110_("multiplayer.disconnect.banned.reason", userbanlistentry.m_10962_());
@@ -462,6 +_,7 @@
       this.f_11197_.put(serverplayer.m_20148_(), serverplayer);
       serverplayer.m_143429_();
       serverplayer.m_21153_(serverplayer.m_21223_());
+      net.minecraftforge.event.ForgeEventFactory.firePlayerRespawnEvent(serverplayer, p_11238_);
       if (flag2) {
          serverplayer.f_8906_.m_9829_(new ClientboundSoundPacket(SoundEvents.f_12377_, SoundSource.BLOCKS, (double)blockpos.m_123341_(), (double)blockpos.m_123342_(), (double)blockpos.m_123343_(), 1.0F, 1.0F, serverlevel1.m_213780_().m_188505_()));
       }
@@ -546,6 +_,7 @@
    }
 
    public void m_5749_(GameProfile p_11254_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11254_, this.f_11195_.m_7022_(), this)) return;
       this.f_11200_.m_11381_(new ServerOpListEntry(p_11254_, this.f_11195_.m_7022_(), this.f_11200_.m_11351_(p_11254_)));
       ServerPlayer serverplayer = this.m_11259_(p_11254_.getId());
       if (serverplayer != null) {
@@ -555,6 +_,7 @@
    }
 
    public void m_5750_(GameProfile p_11281_) {
+      if (net.minecraftforge.event.ForgeEventFactory.onPermissionChanged(p_11281_, 0, this)) return;
       this.f_11200_.m_11393_(p_11281_);
       ServerPlayer serverplayer = this.m_11259_(p_11281_.getId());
       if (serverplayer != null) {
@@ -621,6 +_,22 @@
 
    }
 
+
+   public void saveAll(int interval) {
+      MCUtil.ensureMain("Save Players" , () -> { // Paper - Ensure main
+         int numSaved = 0;
+         long now = MinecraftServer.currentTick;
+         for (int i = 0; i < this.f_11196_.size(); ++i) {
+            ServerPlayer entityplayer = this.f_11196_.get(i);
+            if (interval == -1 || now - entityplayer.lastSave >= interval) {
+               this.m_6765_(entityplayer);
+               if (interval != -1 && ++numSaved <= 10) { break; }
+            }
+            // Paper end
+         }
+         return null; }); // Paper - ensure main
+   }
+
    public UserWhiteList m_11305_() {
       return this.f_11201_;
    }
@@ -784,13 +_,6 @@
       if (serverstatscounter == null) {
          File file1 = this.f_11195_.m_129843_(LevelResource.f_78175_).toFile();
          File file2 = new File(file1, uuid + ".json");
-         if (!file2.exists()) {
-            File file3 = new File(file1, p_11240_.m_7755_().getString() + ".json");
-            Path path = file3.toPath();
-            if (FileUtil.m_133728_(path) && FileUtil.m_133734_(path) && path.startsWith(file1.getPath()) && file3.isFile()) {
-               file3.renameTo(file2);
-            }
-         }
 
          serverstatscounter = new ServerStatsCounter(this.f_11195_, file2);
          this.f_11202_.put(uuid, serverstatscounter);
@@ -809,6 +_,8 @@
          this.f_11203_.put(uuid, playeradvancements);
       }
 
+      // Forge: don't overwrite active player with a fake one.
+      if (!(p_11297_ instanceof net.minecraftforge.common.util.FakePlayer))
       playeradvancements.m_135979_(p_11297_);
       return playeradvancements;
    }
@@ -838,7 +_,7 @@
    }
 
    public List<ServerPlayer> m_11314_() {
-      return this.f_11196_;
+      return this.playersView; //Unmodifiable view, we don't want people removing things without us knowing.
    }
 
    @Nullable
@@ -855,6 +_,7 @@
          playeradvancements.m_135981_(this.f_11195_.m_129889_());
       }
 
+      net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.OnDatapackSyncEvent(this, null));
       this.m_11268_(new ClientboundUpdateTagsPacket(TagNetworkSerialization.m_203950_(this.f_11206_)));
       ClientboundUpdateRecipesPacket clientboundupdaterecipespacket = new ClientboundUpdateRecipesPacket(this.f_11195_.m_129894_().m_44051_());
 
