--- a/net/minecraft/server/level/ServerLevel.java
+++ b/net/minecraft/server/level/ServerLevel.java
@@ -18,15 +_,7 @@
 import java.io.Writer;
 import java.nio.file.Files;
 import java.nio.file.Path;
-import java.util.ArrayList;
-import java.util.Collections;
-import java.util.Comparator;
-import java.util.List;
-import java.util.Locale;
-import java.util.Objects;
-import java.util.Optional;
-import java.util.Set;
-import java.util.UUID;
+import java.util.*;
 import java.util.concurrent.Executor;
 import java.util.function.BooleanSupplier;
 import java.util.function.Function;
@@ -163,11 +_,11 @@
    private static final int f_143242_ = 300;
    private static final int f_184046_ = 65536;
    final List<ServerPlayer> f_8546_ = Lists.newArrayList();
-   private final ServerChunkCache f_8547_;
+   public final ServerChunkCache f_8547_;
    private final MinecraftServer f_8548_;
    private final ServerLevelData f_8549_;
    final EntityTickList f_143243_ = new EntityTickList();
-   private final PersistentEntitySectionManager<Entity> f_143244_;
+   public final PersistentEntitySectionManager<Entity> f_143244_;
    public boolean f_8564_;
    private final SleepStatus f_143245_;
    private int f_8551_;
@@ -184,10 +_,86 @@
    private final List<CustomSpawner> f_8558_;
    @Nullable
    private final EndDragonFight f_8559_;
-   final Int2ObjectMap<EnderDragonPart> f_143247_ = new Int2ObjectOpenHashMap<>();
+   final Int2ObjectMap<net.minecraftforge.entity.PartEntity<?>> f_143247_ = new Int2ObjectOpenHashMap<>();
    private final StructureManager f_214997_;
    private final StructureCheck f_196556_;
    private final boolean f_8561_;
+   public long lastMidTickExecuteFailure; // Paper - execute chunk tasks mid tick
+   private net.minecraftforge.common.util.LevelCapabilityData capabilityData;
+
+   // Paper start - Asynchronous IO
+   public final com.destroystokyo.paper.io.PaperFileIOThread.ChunkDataController poiDataController = new com.destroystokyo.paper.io.PaperFileIOThread.ChunkDataController() {
+      @Override
+      public void writeData(int x, int z, net.minecraft.nbt.CompoundTag compound) throws java.io.IOException {
+         ServerLevel.this.m_7726_().f_8325_.m_140424_().m_63708_(new ChunkPos(x, z), compound);
+      }
+
+      @Override
+      public net.minecraft.nbt.CompoundTag readData(int x, int z) throws java.io.IOException {
+         return ServerLevel.this.m_7726_().f_8325_.m_140424_().m_63706_(new ChunkPos(x, z));
+      }
+
+      @Override
+      public <T> T computeForRegionFile(int chunkX, int chunkZ, java.util.function.Function<net.minecraft.world.level.chunk.storage.RegionFile, T> function) {
+         synchronized (ServerLevel.this.m_7726_().f_8325_.m_140424_()) {
+            net.minecraft.world.level.chunk.storage.RegionFile file;
+
+            try {
+               file = ServerLevel.this.m_7726_().f_8325_.m_140424_().getRegionFile(new ChunkPos(chunkX, chunkZ), false);
+            } catch (java.io.IOException ex) {
+               throw new RuntimeException(ex);
+            }
+
+            return function.apply(file);
+         }
+      }
+
+      @Override
+      public <T> T computeForRegionFileIfLoaded(int chunkX, int chunkZ, java.util.function.Function<net.minecraft.world.level.chunk.storage.RegionFile, T> function) {
+         synchronized (ServerLevel.this.m_7726_().f_8325_.m_140424_()) {
+            net.minecraft.world.level.chunk.storage.RegionFile file = ServerLevel.this.m_7726_().f_8325_.m_140424_().getRegionFileIfLoaded(new ChunkPos(chunkX, chunkZ));
+            return function.apply(file);
+         }
+      }
+   };
+
+   public final com.destroystokyo.paper.io.PaperFileIOThread.ChunkDataController chunkDataController = new com.destroystokyo.paper.io.PaperFileIOThread.ChunkDataController() {
+      @Override
+      public void writeData(int x, int z, net.minecraft.nbt.CompoundTag compound) throws java.io.IOException {
+         ServerLevel.this.m_7726_().f_8325_.m_63502_(new ChunkPos(x, z), compound);
+      }
+
+      @Override
+      public net.minecraft.nbt.CompoundTag readData(int x, int z) throws java.io.IOException {
+         return ServerLevel.this.m_7726_().f_8325_.read(new ChunkPos(x, z));
+      }
+
+      @Override
+      public <T> T computeForRegionFile(int chunkX, int chunkZ, java.util.function.Function<net.minecraft.world.level.chunk.storage.RegionFile, T> function) {
+         synchronized (ServerLevel.this.m_7726_().f_8325_) {
+            net.minecraft.world.level.chunk.storage.RegionFile file;
+
+            try {
+               file = ServerLevel.this.m_7726_().f_8325_.regionFileCache.getRegionFile(new ChunkPos(chunkX, chunkZ), false);
+            } catch (java.io.IOException ex) {
+               throw new RuntimeException(ex);
+            }
+
+            return function.apply(file);
+         }
+      }
+
+      @Override
+      public <T> T computeForRegionFileIfLoaded(int chunkX, int chunkZ, java.util.function.Function<net.minecraft.world.level.chunk.storage.RegionFile, T> function) {
+         synchronized (ServerLevel.this.m_7726_().f_8325_) {
+            net.minecraft.world.level.chunk.storage.RegionFile file = ServerLevel.this.m_7726_().f_8325_.regionFileCache.getRegionFileIfLoaded(new ChunkPos(chunkX, chunkZ));
+            return function.apply(file);
+         }
+      }
+   };
+   public final com.destroystokyo.paper.io.chunk.ChunkTaskManager asyncChunkTaskManager;
+   public static final boolean DEBUG_ENTITIES = Boolean.getBoolean("debug.entities"); // Paper
+   // Paper end
 
    public ServerLevel(MinecraftServer p_214999_, Executor p_215000_, LevelStorageSource.LevelStorageAccess p_215001_, ServerLevelData p_215002_, ResourceKey<Level> p_215003_, LevelStem p_215004_, ChunkProgressListener p_215005_, boolean p_215006_, long p_215007_, List<CustomSpawner> p_215008_, boolean p_215009_) {
       super(p_215002_, p_215003_, p_215004_.m_204521_(), p_214999_::m_129905_, false, p_215006_, p_215007_, p_214999_.m_213994_());
@@ -199,7 +_,7 @@
       boolean flag = p_214999_.m_6365_();
       DataFixer datafixer = p_214999_.m_129933_();
       EntityPersistentStorage<Entity> entitypersistentstorage = new EntityStorage(this, p_215001_.m_197394_(p_215003_).resolve("entities"), datafixer, flag, p_214999_);
-      this.f_143244_ = new PersistentEntitySectionManager<>(Entity.class, new ServerLevel.EntityCallbacks(), entitypersistentstorage);
+      this.f_143244_ = new PersistentEntitySectionManager<>(Entity.class, new ServerLevel.EntityCallbacks(), entitypersistentstorage, this.entitySliceManager);
       this.f_8547_ = new ServerChunkCache(this, p_215001_, datafixer, p_214999_.m_236738_(), p_215000_, chunkgenerator, p_214999_.m_6846_().m_11312_(), p_214999_.m_6846_().m_184213_(), flag, p_215005_, this.f_143244_::m_157524_, () -> {
          return p_214999_.m_129783_().m_8895_();
       });
@@ -227,6 +_,9 @@
       }
 
       this.f_143245_ = new SleepStatus();
+      this.initCapabilities();
+
+      this.asyncChunkTaskManager = new com.destroystokyo.paper.io.chunk.ChunkTaskManager(this); // Paper
    }
 
    public void m_8606_(int p_8607_, int p_8608_, boolean p_8609_, boolean p_8610_) {
@@ -255,8 +_,8 @@
       int i = this.m_46469_().m_46215_(GameRules.f_151486_);
       if (this.f_143245_.m_144002_(i) && this.f_143245_.m_144004_(i, this.f_8546_)) {
          if (this.m_46469_().m_46207_(GameRules.f_46140_)) {
-            long j = this.f_46442_.m_6792_() + 24000L;
-            this.m_8615_(j - j % 24000L);
+            long j = this.m_46468_() + 24000L;
+            this.m_8615_(net.minecraftforge.event.ForgeEventFactory.onSleepFinished(this, j - j % 24000L, this.m_46468_()));
          }
 
          this.m_8804_();
@@ -285,7 +_,7 @@
       this.m_8807_();
       this.f_8557_ = false;
       profilerfiller.m_7238_();
-      boolean flag = !this.f_8546_.isEmpty() || !this.m_8902_().isEmpty();
+      boolean flag = !this.f_8546_.isEmpty() || net.minecraftforge.common.world.ForgeChunkManager.hasForcedChunks(this); //Forge: Replace vanilla's has forced chunk check with forge's that checks both the vanilla and forge added ones
       if (flag) {
          this.m_8886_();
       }
@@ -306,7 +_,7 @@
                   profilerfiller.m_6180_("checkDespawn");
                   p_184065_.m_6043_();
                   profilerfiller.m_7238_();
-                  if (this.f_8547_.f_8325_.m_143145_().m_183913_(p_184065_.m_146902_().m_45588_())) {
+                  if (true && this.f_8547_.f_8325_.m_143145_().m_183913_(p_184065_.m_146902_().m_45588_())) { // Paper - now always true if in the ticking list
                      Entity entity = p_184065_.m_20202_();
                      if (entity != null) {
                         if (!entity.m_213877_() && entity.m_20363_(p_184065_)) {
@@ -317,7 +_,9 @@
                      }
 
                      profilerfiller.m_6180_("tick");
-                     this.m_46653_(this::m_8647_, p_184065_);
+                     if (!p_184065_.m_213877_() && !(p_184065_ instanceof net.minecraftforge.entity.PartEntity)) {
+                        this.m_46653_(this::m_8647_, p_184065_);
+                     }
                      profilerfiller.m_7238_();
                   }
                }
@@ -335,7 +_,10 @@
    }
 
    public boolean m_183438_(long p_184059_) {
-      return this.f_8547_.f_8325_.m_143145_().m_183916_(p_184059_);
+      // Paper start - replace player chunk loader system
+      ChunkHolder holder = this.f_8547_.f_8325_.m_140327_(p_184059_);
+      return holder != null && holder.isTickingReady();
+      // Paper end - replace player chunk loader system
    }
 
    protected void m_8809_() {
@@ -376,6 +_,11 @@
       });
    }
 
+   // Paper start - optimise random block ticking
+   private final BlockPos.MutableBlockPos chunkTickMutablePosition = new BlockPos.MutableBlockPos();
+   // Paper end
+
+   private int currentIceAndSnowTick = 0; protected void resetIceAndSnowTick() { this.currentIceAndSnowTick = this.randomTickRandom.m_188503_(16); } // Pufferfish
    public void m_8714_(LevelChunk p_8715_, int p_8716_) {
       ChunkPos chunkpos = p_8715_.m_7697_();
       boolean flag = this.m_46471_();
@@ -383,21 +_,22 @@
       int j = chunkpos.m_45605_();
       ProfilerFiller profilerfiller = this.m_46473_();
       profilerfiller.m_6180_("thunder");
+      final BlockPos.MutableBlockPos blockposition = this.chunkTickMutablePosition; // Paper - use mutable to reduce allocation rate, final to force compile fail on change
       if (flag && this.m_46470_() && this.f_46441_.m_188503_(100000) == 0) {
-         BlockPos blockpos = this.m_143288_(this.m_46496_(i, 0, j, 15));
-         if (this.m_46758_(blockpos)) {
-            DifficultyInstance difficultyinstance = this.m_6436_(blockpos);
-            boolean flag1 = this.m_46469_().m_46207_(GameRules.f_46134_) && this.f_46441_.m_188500_() < (double)difficultyinstance.m_19056_() * 0.01D && !this.m_8055_(blockpos.m_7495_()).m_60713_(Blocks.f_152587_);
+         blockposition.m_122190_(this.m_143288_(this.m_46496_(i, 0, j, 15))); // Paper
+         if (this.m_46758_(blockposition)) {
+            DifficultyInstance difficultyinstance = this.m_6436_(blockposition);
+            boolean flag1 = this.m_46469_().m_46207_(GameRules.f_46134_) && this.f_46441_.m_188500_() < (double)difficultyinstance.m_19056_() * 0.01D && !this.m_8055_(blockposition.m_7495_()).m_60713_(Blocks.f_152587_);
             if (flag1) {
                SkeletonHorse skeletonhorse = EntityType.f_20525_.m_20615_(this);
                skeletonhorse.m_30923_(true);
                skeletonhorse.m_146762_(0);
-               skeletonhorse.m_6034_((double)blockpos.m_123341_(), (double)blockpos.m_123342_(), (double)blockpos.m_123343_());
+               skeletonhorse.m_6034_((double)blockposition.m_123341_(), (double)blockposition.m_123342_(), (double)blockposition.m_123343_());
                this.m_7967_(skeletonhorse);
             }
 
             LightningBolt lightningbolt = EntityType.f_20465_.m_20615_(this);
-            lightningbolt.m_20219_(Vec3.m_82539_(blockpos));
+            lightningbolt.m_20219_(Vec3.m_82539_(blockposition));
             lightningbolt.m_20874_(flag1);
             this.m_7967_(lightningbolt);
          }
@@ -405,25 +_,34 @@
 
       profilerfiller.m_6182_("iceandsnow");
       if (this.f_46441_.m_188503_(16) == 0) {
-         BlockPos blockpos2 = this.m_5452_(Heightmap.Types.MOTION_BLOCKING, this.m_46496_(i, 0, j, 15));
-         BlockPos blockpos3 = blockpos2.m_7495_();
-         Biome biome = this.m_204166_(blockpos2).m_203334_();
-         if (biome.m_47477_(this, blockpos3)) {
-            this.m_46597_(blockpos3, Blocks.f_50126_.m_49966_());
+         // Paper start - optimise chunk ticking
+         this.getRandomBlockPosition(i, 0, j, 15, blockposition);
+         int normalY = p_8715_.m_5885_(Heightmap.Types.MOTION_BLOCKING, blockposition.m_123341_() & 15, blockposition.m_123343_() & 15) + 1;
+         int downY = normalY - 1;
+         blockposition.m_142448_(normalY);
+         // Paper end
+         Biome biome = this.m_204166_(blockposition).m_203334_();
+         if (this.isAreaLoaded(blockposition, 1)) // Forge: check area to avoid loading neighbors in unloaded chunks
+
+            blockposition.m_142448_(downY);
+         if (biome.m_47477_(this, blockposition)) {
+            this.m_46597_(blockposition, Blocks.f_50126_.m_49966_());
          }
 
          if (flag) {
-            if (biome.m_47519_(this, blockpos2)) {
-               this.m_46597_(blockpos2, Blocks.f_50125_.m_49966_());
+            blockposition.m_142448_(normalY); // Paper
+            if (biome.m_47519_(this, blockposition)) {
+               this.m_46597_(blockposition, Blocks.f_50125_.m_49966_());
             }
 
-            BlockState blockstate1 = this.m_8055_(blockpos3);
+            blockposition.m_142448_(downY); // Paper
+            BlockState blockstate1 = this.m_8055_(blockposition);
             Biome.Precipitation biome$precipitation = biome.m_47530_();
-            if (biome$precipitation == Biome.Precipitation.RAIN && biome.m_198904_(blockpos3)) {
+            if (biome$precipitation == Biome.Precipitation.RAIN && biome.m_198904_(blockposition)) {
                biome$precipitation = Biome.Precipitation.SNOW;
             }
 
-            blockstate1.m_60734_().m_141997_(blockstate1, this, blockpos3, biome$precipitation);
+            blockstate1.m_60734_().m_141997_(blockstate1, this, blockposition, biome$precipitation);
          }
       }
 
@@ -598,15 +_,19 @@
          this.f_8548_.m_6846_().m_11270_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, this.f_46440_), this.m_46472_());
       }
 
+      /* The function in use here has been replaced in order to only send the weather info to players in the correct dimension,
+       * rather than to all players on the server. This is what causes the client-side rain, as the
+       * client believes that it has started raining locally, rather than in another dimension.
+       */
       if (flag != this.m_46471_()) {
          if (flag) {
-            this.f_8548_.m_6846_().m_11268_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132155_, 0.0F));
+            this.f_8548_.m_6846_().m_11270_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132155_, 0.0F), this.m_46472_());
          } else {
-            this.f_8548_.m_6846_().m_11268_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132154_, 0.0F));
+            this.f_8548_.m_6846_().m_11270_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132154_, 0.0F), this.m_46472_());
          }
 
-         this.f_8548_.m_6846_().m_11268_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, this.f_46438_));
-         this.f_8548_.m_6846_().m_11268_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, this.f_46440_));
+         this.f_8548_.m_6846_().m_11270_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132160_, this.f_46438_), this.m_46472_());
+         this.f_8548_.m_6846_().m_11270_(new ClientboundGameEventPacket(ClientboundGameEventPacket.f_132161_, this.f_46440_), this.m_46472_());
       }
 
    }
@@ -627,7 +_,7 @@
       if (fluidstate.m_192917_(p_184078_)) {
          fluidstate.m_76163_(this, p_184077_);
       }
-
+      MinecraftServer.getServer().executeMidTickTasks(); // Paper - exec chunk tasks during world tick
    }
 
    private void m_184112_(BlockPos p_184113_, Block p_184114_) {
@@ -635,10 +_,11 @@
       if (blockstate.m_60713_(p_184114_)) {
          blockstate.m_222963_(this, p_184113_, this.f_46441_);
       }
-
+      MinecraftServer.getServer().executeMidTickTasks(); // Paper - exec chunk tasks during world tick
    }
 
    public void m_8647_(Entity p_8648_) {
+      if (!p_8648_.m_213877_()) this.f_143244_.updateNavigatorsInRegion(p_8648_); // Paper - optimise notify
       p_8648_.m_146867_();
       ProfilerFiller profilerfiller = this.m_46473_();
       ++p_8648_.f_19797_;
@@ -665,6 +_,7 @@
                return Registry.f_122826_.m_7981_(p_8664_.m_6095_()).toString();
             });
             profilerfiller.m_6174_("tickPassenger");
+            if (p_8664_.canUpdate())
             p_8664_.m_6083_();
             profilerfiller.m_7238_();
 
@@ -682,6 +_,31 @@
       return !this.f_8548_.m_7762_(this, p_8697_, p_8696_) && this.m_6857_().m_61937_(p_8697_);
    }
 
+   // Paper start - derived from below
+   public void saveIncrementally(boolean doFull) {
+      ServerChunkCache chunkproviderserver = this.m_7726_();
+
+
+         if (doFull) {
+            this.m_8806_();
+         }
+
+         if (!this.m_7441_()) chunkproviderserver.saveIncrementally();
+
+         // Copied from save()
+         // CraftBukkit start - moved from MinecraftServer.saveChunks
+         if (doFull) { // Paper
+            ServerLevel worldserver1 = this;
+
+            this.f_8549_.m_7831_(worldserver1.m_6857_().m_61970_());
+            this.f_8548_.f_129749_.m_5917_(this.f_8548_.m_129901_().m_136307_());
+            this.f_8548_.f_129744_.m_78290_(this.m_5962_(), this.f_8548_.f_129749_, this.f_8548_.m_6846_().m_6960_());
+         }
+         // CraftBukkit end
+
+   }
+   // Paper end
+
    public void m_8643_(@Nullable ProgressListener p_8644_, boolean p_8645_, boolean p_8646_) {
       ServerChunkCache serverchunkcache = this.m_7726_();
       if (!p_8646_) {
@@ -701,6 +_,7 @@
             this.f_143244_.m_157554_();
          }
 
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.level.LevelEvent.Save(this));
       }
    }
 
@@ -774,6 +_,7 @@
    }
 
    private void m_8853_(ServerPlayer p_8854_) {
+      if (net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityJoinLevelEvent(p_8854_, this))) return;
       Entity entity = this.m_142646_().m_142694_(p_8854_.m_20148_());
       if (entity != null) {
          f_8566_.warn("Force-added player with duplicate UUID {}", (Object)p_8854_.m_20148_().toString());
@@ -781,7 +_,8 @@
          this.m_143261_((ServerPlayer)entity, Entity.RemovalReason.DISCARDED);
       }
 
-      this.f_143244_.m_157533_(p_8854_);
+      this.f_143244_.addNewEntityWithoutEvent(p_8854_);
+      p_8854_.onAddedToWorld();
    }
 
    private boolean m_8872_(Entity p_8873_) {
@@ -789,7 +_,12 @@
          f_8566_.warn("Tried to add entity {} but it was marked as removed already", (Object)EntityType.m_20613_(p_8873_.m_6095_()));
          return false;
       } else {
-         return this.f_143244_.m_157533_(p_8873_);
+         if (this.f_143244_.m_157533_(p_8873_)) {
+            p_8873_.onAddedToWorld();
+            return true;
+         } else {
+            return false;
+         }
       }
    }
 
@@ -826,10 +_,22 @@
    }
 
    public void m_214150_(@Nullable Player p_215017_, double p_215018_, double p_215019_, double p_215020_, SoundEvent p_215021_, SoundSource p_215022_, float p_215023_, float p_215024_, long p_215025_) {
+      net.minecraftforge.event.PlayLevelSoundEvent.AtPosition event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtPosition(this, p_215018_, p_215019_, p_215020_, p_215021_, p_215022_, p_215023_, p_215024_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_215021_ = event.getSound();
+      p_215022_ = event.getSource();
+      p_215023_ = event.getNewVolume();
+      p_215024_ = event.getNewPitch();
       this.f_8548_.m_6846_().m_11241_(p_215017_, p_215018_, p_215019_, p_215020_, (double)p_215021_.m_215668_(p_215023_), this.m_46472_(), new ClientboundSoundPacket(p_215021_, p_215022_, p_215018_, p_215019_, p_215020_, p_215023_, p_215024_, p_215025_));
    }
 
    public void m_213890_(@Nullable Player p_215027_, Entity p_215028_, SoundEvent p_215029_, SoundSource p_215030_, float p_215031_, float p_215032_, long p_215033_) {
+      net.minecraftforge.event.PlayLevelSoundEvent.AtEntity event = net.minecraftforge.event.ForgeEventFactory.onPlaySoundAtEntity(p_215028_, p_215029_, p_215030_, p_215031_, p_215032_);
+      if (event.isCanceled() || event.getSound() == null) return;
+      p_215029_ = event.getSound();
+      p_215030_ = event.getSource();
+      p_215031_ = event.getNewVolume();
+      p_215032_ = event.getNewPitch();
       this.f_8548_.m_6846_().m_11241_(p_215027_, p_215028_.m_20185_(), p_215028_.m_20186_(), p_215028_.m_20189_(), (double)p_215029_.m_215668_(p_215031_), this.m_46472_(), new ClientboundSoundEntityPacket(p_215029_, p_215030_, p_215028_, p_215031_, p_215032_, p_215033_));
    }
 
@@ -846,6 +_,7 @@
    }
 
    public void m_214171_(GameEvent p_215041_, Vec3 p_215042_, GameEvent.Context p_215043_) {
+      if (!net.minecraftforge.common.ForgeHooks.onVanillaGameEvent(this, p_215041_, p_215042_, p_215043_)) return;
       int i = p_215041_.m_157827_();
       BlockPos blockpos = new BlockPos(p_215042_);
       int j = SectionPos.m_123171_(blockpos.m_123341_() - i);
@@ -909,32 +_,74 @@
       VoxelShape voxelshape = p_8757_.m_60812_(this, p_8755_);
       if (Shapes.m_83157_(voxelshape1, voxelshape, BooleanOp.f_82687_)) {
          List<PathNavigation> list = new ObjectArrayList<>();
-
-         for(Mob mob : this.f_143246_) {
-            PathNavigation pathnavigation = mob.m_21573_();
-            if (pathnavigation.m_200903_(p_8755_)) {
-               list.add(pathnavigation);
-            }
-         }
+         // Paper start - optimise notify()
+         io.papermc.paper.chunk.SingleThreadChunkRegionManager.Region region = this.m_7726_().f_8325_.dataRegionManager.getRegion(p_8755_.m_123341_() >> 4, p_8755_.m_123343_() >> 4);
+         if (region == null) {
+            return;
+         }
+         io.papermc.paper.util.maplist.IteratorSafeOrderedReferenceSet<Mob> navigatorsFromRegion = ((ChunkMap.DataRegionData)region.regionData).getNavigators();
+         if (navigatorsFromRegion == null) {
+            return;
+         }
+         io.papermc.paper.util.maplist.IteratorSafeOrderedReferenceSet.Iterator<Mob> iterator = navigatorsFromRegion.iterator();
+
+         try { while (iterator.hasNext()) { // Paper end - optimise notify()
+            // CraftBukkit start - fix SPIGOT-6362
+            Mob entityinsentient;
+            try {
+               entityinsentient = (Mob) iterator.next();
+            } catch (java.util.ConcurrentModificationException ex) {
+               // This can happen because the pathfinder update below may trigger a chunk load, which in turn may cause more navigators to register
+               // In this case we just run the update again across all the iterators as the chunk will then be loaded
+               // As this is a relative edge case it is much faster than copying navigators (on either read or write)
+               this.m_7260_(p_8755_, p_8756_, p_8757_, p_8758_);
+               return;
+            }
+            // CraftBukkit end
+            PathNavigation navigationabstract = entityinsentient.m_21573_();
+
+            if (navigationabstract.m_200903_(p_8755_)) {
+               list.add(navigationabstract);
+            }
+         }
+
+         //Compatibility with immersive ingenering
+            for(Mob mob : this.f_143246_) {
+
+            }
 
          try {
             this.f_200893_ = true;
+            // Paper start - optimise notify()
+            Iterator<PathNavigation> navigationIterator = list.iterator();
 
-            for(PathNavigation pathnavigation1 : list) {
-               pathnavigation1.m_26569_();
+            while (navigationIterator.hasNext()) {
+               PathNavigation navigationabstract1 = navigationIterator.next();
+               // Paper end - optimise notify()
+               navigationabstract1.m_26569_();
             }
          } finally {
             this.f_200893_ = false;
          }
 
+            // Paper start - optimise notify()
+         } finally {
+            iterator.finishedIterating();
+         }
+         // Paper end - optimise notify()
       }
    }
 
    public void m_46672_(BlockPos p_215045_, Block p_215046_) {
+      net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(this, p_215045_, this.m_8055_(p_215045_), java.util.EnumSet.allOf(Direction.class), false).isCanceled();
       this.f_220350_.m_214152_(p_215045_, p_215046_, (Direction)null);
    }
 
    public void m_46590_(BlockPos p_215052_, Block p_215053_, Direction p_215054_) {
+      java.util.EnumSet<Direction> directions = java.util.EnumSet.allOf(Direction.class);
+      directions.remove(p_215054_);
+      if (net.minecraftforge.event.ForgeEventFactory.onNeighborNotify(this, p_215052_, this.m_8055_(p_215052_), directions, false).isCanceled())
+         return;
       this.f_220350_.m_214152_(p_215052_, p_215053_, p_215054_);
    }
 
@@ -956,6 +_,7 @@
 
    public Explosion m_7703_(@Nullable Entity p_8653_, @Nullable DamageSource p_8654_, @Nullable ExplosionDamageCalculator p_8655_, double p_8656_, double p_8657_, double p_8658_, float p_8659_, boolean p_8660_, Explosion.BlockInteraction p_8661_) {
       Explosion explosion = new Explosion(this, p_8653_, p_8654_, p_8655_, p_8656_, p_8657_, p_8658_, p_8659_, p_8660_, p_8661_);
+      if (net.minecraftforge.event.ForgeEventFactory.onExplosionStart(this, explosion)) return explosion;
       explosion.m_46061_();
       explosion.m_46075_(false);
       if (p_8661_ == Explosion.BlockInteraction.NONE) {
@@ -1462,6 +_,12 @@
       });
    }
 
+   protected void initCapabilities() {
+      this.gatherCapabilities();
+      capabilityData = this.m_8895_().m_164861_(e -> net.minecraftforge.common.util.LevelCapabilityData.load(e, getCapabilities()), () -> new net.minecraftforge.common.util.LevelCapabilityData(getCapabilities()), net.minecraftforge.common.util.LevelCapabilityData.ID);
+      capabilityData.setCapabilities(getCapabilities());
+   }
+
    public LevelEntityGetter<Entity> m_142646_() {
       return this.f_143244_.m_157567_();
    }
@@ -1498,7 +_,10 @@
    }
 
    private boolean m_184110_(long p_184111_) {
-      return this.m_143319_(p_184111_) && this.f_8547_.m_143239_(p_184111_);
+      // Paper start - optimize is ticking ready type functions
+      ChunkHolder chunkHolder = this.f_8547_.f_8325_.m_140327_(p_184111_);
+      return chunkHolder != null && chunkHolder.isTickingReady() && this.m_143319_(p_184111_); // Paper - no longer need to check with chunk source
+      // Paper end
    }
 
    public boolean m_143340_(BlockPos p_143341_) {
@@ -1522,11 +_,14 @@
       }
 
       public void m_141987_(Entity p_143363_) {
+         if (p_143363_ instanceof net.minecraft.world.entity.Marker) return; // Paper - Don't tick markers
          ServerLevel.this.f_143243_.m_156908_(p_143363_);
+         ServerLevel.this.f_143244_.addNavigatorsIfPathingToRegion(p_143363_); // Paper - optimise notify
       }
 
       public void m_141983_(Entity p_143367_) {
          ServerLevel.this.f_143243_.m_156912_(p_143367_);
+         ServerLevel.this.f_143244_.removeNavigatorsFromData(p_143367_); // Paper - optimise notify
       }
 
       public void m_141985_(Entity p_143371_) {
@@ -1545,8 +_,8 @@
             ServerLevel.this.f_143246_.add(mob);
          }
 
-         if (p_143371_ instanceof EnderDragon enderdragon) {
-            for(EnderDragonPart enderdragonpart : enderdragon.m_31156_()) {
+         if (p_143371_.isMultipartEntity()) {
+            for(net.minecraftforge.entity.PartEntity<?> enderdragonpart : p_143371_.getParts()) {
                ServerLevel.this.f_143247_.put(enderdragonpart.m_19879_(), enderdragonpart);
             }
          }
@@ -1570,17 +_,25 @@
             ServerLevel.this.f_143246_.remove(mob);
          }
 
-         if (p_143375_ instanceof EnderDragon enderdragon) {
-            for(EnderDragonPart enderdragonpart : enderdragon.m_31156_()) {
+         if (p_143375_.isMultipartEntity()) {
+            for(net.minecraftforge.entity.PartEntity<?> enderdragonpart : p_143375_.getParts()) {
                ServerLevel.this.f_143247_.remove(enderdragonpart.m_19879_());
             }
          }
 
          p_143375_.m_213651_(DynamicGameEventListener::m_223634_);
+
+         p_143375_.onRemovedFromWorld();
+         net.minecraftforge.common.MinecraftForge.EVENT_BUS.post(new net.minecraftforge.event.entity.EntityLeaveLevelEvent(p_143375_, ServerLevel.this));
       }
 
       public void m_214006_(Entity p_215086_) {
          p_215086_.m_213651_(DynamicGameEventListener::m_223641_);
       }
+   }
+
+   @Override
+   public java.util.Collection<net.minecraftforge.entity.PartEntity<?>> getPartEntities() {
+      return this.f_143247_.values();
    }
 }
