--- a/net/minecraft/server/level/WorldGenRegion.java
+++ b/net/minecraft/server/level/WorldGenRegion.java
@@ -1,5 +_,6 @@
 package net.minecraft.server.level;
 
+import com.abdelaziz.canary.common.util.Pos;
 import com.mojang.logging.LogUtils;
 import java.util.Collections;
 import java.util.List;
@@ -82,6 +_,12 @@
    private final AtomicLong f_184182_ = new AtomicLong();
    private static final ResourceLocation f_215158_ = new ResourceLocation("worldgen_region_random");
 
+   // Array view of the chunks in the region to avoid an unnecessary de-reference
+   private ChunkAccess[] chunksArr;
+
+   // The starting position of this region
+   private int minChunkX, minChunkZ;
+
    public WorldGenRegion(ServerLevel p_143484_, List<ChunkAccess> p_143485_, ChunkStatus p_143486_, int p_143487_) {
       this.f_143480_ = p_143486_;
       this.f_143481_ = p_143487_;
@@ -102,7 +_,33 @@
          this.f_9488_ = p_143485_.get(p_143485_.size() - 1).m_7697_();
          this.f_215157_ = p_143484_.m_215010_().m_220468_(this);
       }
-   }
+
+      this.minChunkX = this.f_9487_.f_45578_;
+      this.minChunkZ = this.f_9487_.f_45579_;
+
+      this.chunksArr = p_143485_.toArray(new ChunkAccess[0]);
+   }
+
+   // Paper start - starlight
+   @Override
+   public int m_45517_(final net.minecraft.world.level.LightLayer lightLayer, final BlockPos blockPos) {
+      final ChunkAccess chunk = this.m_6325_(blockPos.m_123341_() >> 4, blockPos.m_123343_() >> 4);
+      if (!chunk.m_6332_()) {
+         return 0;
+      }
+      return this.m_5518_().m_75814_(lightLayer).m_7768_(blockPos);
+   }
+
+
+   @Override
+   public int m_45524_(final BlockPos blockPos, final int subtract) {
+      final ChunkAccess chunk = this.m_6325_(blockPos.m_123341_() >> 4, blockPos.m_123343_() >> 4);
+      if (!chunk.m_6332_()) {
+         return 0;
+      }
+      return this.m_5518_().m_75831_(blockPos, subtract);
+   }
+   // Paper end - starlight
 
    public boolean m_215159_(ChunkPos p_215160_, int p_215161_) {
       return this.f_9479_.m_7726_().f_8325_.m_223451_(p_215160_, p_215161_);
@@ -120,6 +_,14 @@
       return this.m_46819_(p_9507_, p_9508_, ChunkStatus.f_62314_);
    }
 
+   /**
+    * Use our chunk fetch function
+    */
+   public ChunkAccess m_46865_(BlockPos pos) {
+      // Skip checking chunk.getStatus().isAtLeast(ChunkStatus.EMPTY) here, because it is always true
+      return this.m_6325_(Pos.ChunkCoord.fromBlockCoord(pos.m_123341_()), Pos.ChunkCoord.fromBlockCoord(pos.m_123343_()));
+   }
+
    @Nullable
    public ChunkAccess m_6522_(int p_9514_, int p_9515_, ChunkStatus p_9516_, boolean p_9517_) {
       ChunkAccess chunkaccess;
@@ -147,12 +_,24 @@
       }
    }
 
+   @Nullable
+   public ChunkAccess getChunkIfLoadedImmediately(int x, int z) {
+      return this.m_6522_(x, z, ChunkStatus.f_62326_, false);
+   }
+
+   @Override
+   public final BlockState getBlockStateIfLoaded(BlockPos blockposition) {
+      ChunkAccess chunk = this.getChunkIfLoadedImmediately(blockposition.m_123341_() >> 4, blockposition.m_123343_() >> 4);
+      return chunk == null ? null : chunk.m_8055_(blockposition);
+   }
+
    public boolean m_7232_(int p_9574_, int p_9575_) {
       return p_9574_ >= this.f_9487_.f_45578_ && p_9574_ <= this.f_9488_.f_45578_ && p_9575_ >= this.f_9487_.f_45579_ && p_9575_ <= this.f_9488_.f_45579_;
    }
 
    public BlockState m_8055_(BlockPos p_9587_) {
       return this.m_6325_(SectionPos.m_123171_(p_9587_.m_123341_()), SectionPos.m_123171_(p_9587_.m_123343_())).m_8055_(p_9587_);
+
    }
 
    public FluidState m_6425_(BlockPos p_9577_) {
@@ -189,7 +_,8 @@
       if (blockstate.m_60795_()) {
          return false;
       } else {
-         if (p_9551_) {
+         if (p_9551_) f_9474_.warn("Potential async entity add during worldgen", new Throwable()); // Paper - log when this happens
+         if (false) { // CraftBukkit - SPIGOT-6833: Do not drop during world generation
             BlockEntity blockentity = blockstate.m_155947_() ? this.m_7702_(p_9550_) : null;
             Block.m_49881_(blockstate, this.f_9479_, p_9550_, blockentity, p_9552_, ItemStack.f_41583_);
          }
@@ -248,7 +_,7 @@
 
          return true;
       } else {
-         Util.m_143785_("Detected setBlock in a far chunk [" + i + ", " + j + "], pos: " + p_181031_ + ", status: " + this.f_143480_ + (this.f_143482_ == null ? "" : ", currently generating: " + (String)this.f_143482_.get()));
+         //Util.logAndPauseIfInIde("Detected setBlock in a far chunk [" + i + ", " + j + "], pos: " + p_181031_ + ", status: " + this.generatingStatus + (this.currentlyGenerating == null ? "" : ", currently generating: " + (String)this.currentlyGenerating.get()));
          return false;
       }
    }
@@ -416,4 +_,11 @@
    public long m_183596_() {
       return this.f_184182_.getAndIncrement();
    }
+
+   @Override
+   public void getEntities(Entity except, AABB box, Predicate<? super Entity> predicate, List<Entity> into) {}
+
+   @Override
+   public void getHardCollidingEntities(Entity except, AABB box, Predicate<? super Entity> predicate, List<Entity> into) {}
+
 }
