--- a/net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData.java
+++ b/net/minecraft/network/protocol/game/ClientboundLevelChunkPacketData.java
@@ -25,6 +_,15 @@
    private final byte[] f_195648_;
    private final List<ClientboundLevelChunkPacketData.BlockEntityInfo> f_195649_;
 
+   // Paper start
+   private final java.util.List<net.minecraft.network.protocol.Packet> extraPackets = new java.util.ArrayList<>();
+   private static final int TE_LIMIT = Integer.getInteger("Paper.excessiveTELimit", 750);
+
+   public List<net.minecraft.network.protocol.Packet> getExtraPackets() {
+      return this.extraPackets;
+   }
+   // Paper end
+
    public ClientboundLevelChunkPacketData(LevelChunk p_195651_) {
       this.f_195647_ = new CompoundTag();
 
@@ -37,8 +_,17 @@
       this.f_195648_ = new byte[m_195664_(p_195651_)];
       m_195668_(new FriendlyByteBuf(this.m_195679_()), p_195651_);
       this.f_195649_ = Lists.newArrayList();
-
+      int totalTileEntities = 0; // Paper
       for(Map.Entry<BlockPos, BlockEntity> entry1 : p_195651_.m_62954_().entrySet()) {
+         // Paper start
+         if (++totalTileEntities > TE_LIMIT) {
+            var packet = entry1.getValue().m_58483_();
+            if (packet != null) {
+               this.extraPackets.add(packet);
+               continue;
+            }
+         }
+         // Paper end
          this.f_195649_.add(ClientboundLevelChunkPacketData.BlockEntityInfo.m_195691_(entry1.getValue()));
       }
 
