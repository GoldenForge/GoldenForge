--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -268,10 +_,36 @@
         return this.assignProfessionWhenSpawned;
     }
 
+    // Spigot Start
+    @Override
+    public void inactiveTick() {
+        // SPIGOT-3874, SPIGOT-3894, SPIGOT-3846, SPIGOT-5286 :(
+        // Paper start
+        if (this.getUnhappyCounter() > 0) {
+            this.setUnhappyCounter(this.getUnhappyCounter() - 1);
+        }
+        if (this.isEffectiveAi()) {
+            if (this.level().paperConfig().spigotConfigs.tickInactiveVillagers) {
+                this.customServerAiStep();
+            } else {
+                this.customServerAiStep(true);
+            }
+        }
+        maybeDecayGossip();
+        // Paper end
+
+        super.inactiveTick();
+    }
+    // Spigot End
+
     @Override
     protected void customServerAiStep() {
+        this.customServerAiStep(false);
+    }
+
+    protected void customServerAiStep(final boolean inactive) {
         this.level().getProfiler().push("villagerBrain");
-        this.getBrain().tick((ServerLevel)this.level(), this);
+        if (!inactive) this.getBrain().tick((ServerLevel)this.level(), this); // Paper
         this.level().getProfiler().pop();
         if (this.assignProfessionWhenSpawned) {
             this.assignProfessionWhenSpawned = false;
@@ -295,7 +_,7 @@
             this.lastTradedPlayer = null;
         }
 
-        if (!this.isNoAi() && this.random.nextInt(100) == 0) {
+        if (!inactive && !this.isNoAi() && this.random.nextInt(100) == 0) { // Paper
             Raid raid = ((ServerLevel)this.level()).getRaidAt(this.blockPosition());
             if (raid != null && raid.isActive() && !raid.isOver()) {
                 this.level().broadcastEntityEvent(this, (byte)42);
@@ -306,6 +_,8 @@
             this.stopTrading();
         }
 
+        if (inactive) return; // Paper
+
         super.customServerAiStep();
     }
 
@@ -322,7 +_,7 @@
     @Override
     public InteractionResult mobInteract(Player p_35472_, InteractionHand p_35473_) {
         ItemStack itemstack = p_35472_.getItemInHand(p_35473_);
-        if (itemstack.is(Items.VILLAGER_SPAWN_EGG) || !this.isAlive() || this.isTrading() || this.isSleeping()) {
+        if (itemstack.is(Items.VILLAGER_SPAWN_EGG) || !this.isAlive() || this.isTrading() || this.isSleeping() || p_35472_.isSecondaryUseActive()) {
             return super.mobInteract(p_35472_, p_35473_);
         } else if (this.isBaby()) {
             this.setUnhappy();
@@ -742,8 +_,9 @@
 
     @Override
     protected Component getTypeName() {
+        net.minecraft.resources.ResourceLocation profName = BuiltInRegistries.VILLAGER_PROFESSION.getKey(this.getVillagerData().getProfession());
         return Component.translatable(
-            this.getType().getDescriptionId() + "." + BuiltInRegistries.VILLAGER_PROFESSION.getKey(this.getVillagerData().getProfession()).getPath()
+            this.getType().getDescriptionId() + '.' + (!"minecraft".equals(profName.getNamespace()) ? profName.getNamespace() + '.' : "") + profName.getPath()
         );
     }
 
@@ -799,7 +_,7 @@
 
     @Override
     public void thunderHit(ServerLevel p_35409_, LightningBolt p_35410_) {
-        if (p_35409_.getDifficulty() != Difficulty.PEACEFUL) {
+        if (p_35409_.getDifficulty() != Difficulty.PEACEFUL && net.neoforged.neoforge.event.EventHooks.canLivingConvert(this, EntityType.WITCH, (timer) -> {})) {
             LOGGER.info("Villager {} was struck by lightning {}.", this, p_35410_);
             Witch witch = EntityType.WITCH.create(p_35409_);
             if (witch != null) {
@@ -812,6 +_,7 @@
                 }
 
                 witch.setPersistenceRequired();
+                net.neoforged.neoforge.event.EventHooks.onLivingConvert(this, witch);
                 p_35409_.addFreshEntityWithPassengers(witch);
                 this.releaseAllPois();
                 this.discard();
@@ -831,7 +_,10 @@
     @Override
     public boolean wantsToPickUp(ItemStack p_35543_) {
         Item item = p_35543_.getItem();
-        return (WANTED_ITEMS.contains(item) || this.getVillagerData().getProfession().requestedItems().contains(item))
+        // Neo: Patched so that Farmer Villagers will pick up SpecialPlantable items. Also fixes MC-274244 by making "minecraft:villager_plantable_seeds" tagged items also be picked up by Farmer Villagers to be planted later.
+        boolean isFarmerDesiredSeed = (p_35543_.is(ItemTags.VILLAGER_PLANTABLE_SEEDS) || (p_35543_.getItem() instanceof net.neoforged.neoforge.common.SpecialPlantable specialPlantable && specialPlantable.villagerCanPlantItem(this)))
+                && this.getVillagerData().getProfession().secondaryPoi().stream().anyMatch(secondaryPoi -> secondaryPoi.defaultBlockState().is(net.neoforged.neoforge.common.Tags.Blocks.VILLAGER_FARMLANDS));
+        return (WANTED_ITEMS.contains(item) || this.getVillagerData().getProfession().requestedItems().contains(item) || isFarmerDesiredSeed)
             && this.getInventory().canAddItem(p_35543_);
     }
 
