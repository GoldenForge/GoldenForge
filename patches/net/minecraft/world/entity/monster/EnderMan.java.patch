--- a/net/minecraft/world/entity/monster/EnderMan.java
+++ b/net/minecraft/world/entity/monster/EnderMan.java
@@ -118,7 +_,6 @@
 
     @Override
     public void setTarget(@Nullable LivingEntity p_32537_) {
-        super.setTarget(p_32537_);
         AttributeInstance attributeinstance = this.getAttribute(Attributes.MOVEMENT_SPEED);
         if (p_32537_ == null) {
             this.targetChangeTime = 0;
@@ -132,6 +_,7 @@
                 attributeinstance.addTransientModifier(SPEED_MODIFIER_ATTACKING);
             }
         }
+        super.setTarget(p_32537_); //Forge: Moved down to allow event handlers to write data manager values.
     }
 
     @Override
@@ -214,7 +_,7 @@
 
     boolean isLookingAtMe(Player p_32535_) {
         ItemStack itemstack = p_32535_.getInventory().armor.get(3);
-        if (itemstack.is(Blocks.CARVED_PUMPKIN.asItem())) {
+        if (net.neoforged.neoforge.common.CommonHooks.shouldSuppressEnderManAnger(this, p_32535_, itemstack)) {
             return false;
         } else {
             Vec3 vec3 = p_32535_.getViewVector(1.0F).normalize();
@@ -293,16 +_,25 @@
     private boolean teleport(double p_32544_, double p_32545_, double p_32546_) {
         BlockPos.MutableBlockPos blockpos$mutableblockpos = new BlockPos.MutableBlockPos(p_32544_, p_32545_, p_32546_);
 
-        while (blockpos$mutableblockpos.getY() > this.level().getMinBuildHeight() && !this.level().getBlockState(blockpos$mutableblockpos).blocksMotion()) {
+        // Pufferfish start - single chunk lookup
+        net.minecraft.world.level.chunk.LevelChunk chunk = this.level().getChunkIfLoaded(blockpos$mutableblockpos);
+        if (chunk == null) {
+            return false;
+        }
+        // Pufferfish end
+
+        while (blockpos$mutableblockpos.getY() > this.level().getMinBuildHeight() && !chunk.getBlockState(blockpos$mutableblockpos).blocksMotion()) { // Pufferfish
             blockpos$mutableblockpos.move(Direction.DOWN);
         }
 
-        BlockState blockstate = this.level().getBlockState(blockpos$mutableblockpos);
+        BlockState blockstate = chunk.getBlockState(blockpos$mutableblockpos); // Pufferfish
         boolean flag = blockstate.blocksMotion();
         boolean flag1 = blockstate.getFluidState().is(FluidTags.WATER);
         if (flag && !flag1) {
+            net.neoforged.neoforge.event.entity.EntityTeleportEvent.EnderEntity event = net.neoforged.neoforge.event.EventHooks.onEnderTeleport(this, p_32544_, p_32545_, p_32546_);
+            if (event.isCanceled()) return false;
             Vec3 vec3 = this.position();
-            boolean flag2 = this.randomTeleport(p_32544_, p_32545_, p_32546_, true);
+            boolean flag2 = this.randomTeleport(event.getTargetX(), event.getTargetY(), event.getTargetZ(), true);
             if (flag2) {
                 this.level().gameEvent(GameEvent.TELEPORT, vec3, GameEvent.Context.of(this));
                 if (!this.isSilent()) {
@@ -459,7 +_,7 @@
             if (this.enderman.getCarriedBlock() == null) {
                 return false;
             } else {
-                return !this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
+                return !net.neoforged.neoforge.event.EventHooks.canEntityGrief(this.enderman.level(), this.enderman)
                     ? false
                     : this.enderman.getRandom().nextInt(reducedTickDelay(2000)) == 0;
             }
@@ -473,13 +_,14 @@
             int j = Mth.floor(this.enderman.getY() + randomsource.nextDouble() * 2.0);
             int k = Mth.floor(this.enderman.getZ() - 1.0 + randomsource.nextDouble() * 2.0);
             BlockPos blockpos = new BlockPos(i, j, k);
-            BlockState blockstate = level.getBlockState(blockpos);
+            BlockState blockstate = level.getBlockStateIfLoaded(blockpos); // Paper - Prevent endermen from loading chunks
+            if (blockstate == null) return; // Paper - Prevent endermen from loading chunks
             BlockPos blockpos1 = blockpos.below();
             BlockState blockstate1 = level.getBlockState(blockpos1);
             BlockState blockstate2 = this.enderman.getCarriedBlock();
             if (blockstate2 != null) {
                 blockstate2 = Block.updateFromNeighbourShapes(blockstate2, this.enderman.level(), blockpos);
-                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1)) {
+                if (this.canPlaceBlock(level, blockpos, blockstate2, blockstate, blockstate1, blockpos1) && !net.neoforged.neoforge.event.EventHooks.onBlockPlace(enderman, net.neoforged.neoforge.common.util.BlockSnapshot.create(level.dimension(), level, blockpos1), net.minecraft.core.Direction.UP)) {
                     level.setBlock(blockpos, blockstate2, 3);
                     level.gameEvent(GameEvent.BLOCK_PLACE, blockpos, GameEvent.Context.of(this.enderman, blockstate2));
                     this.enderman.setCarriedBlock(null);
@@ -491,6 +_,7 @@
             return p_32562_.isAir()
                 && !p_32563_.isAir()
                 && !p_32563_.is(Blocks.BEDROCK)
+                && !p_32563_.is(net.neoforged.neoforge.common.Tags.Blocks.ENDERMAN_PLACE_ON_BLACKLIST)
                 && p_32563_.isCollisionShapeFullBlock(p_32559_, p_32564_)
                 && p_32561_.canSurvive(p_32559_, p_32560_)
                 && p_32559_.getEntities(this.enderman, AABB.unitCubeFromLowerCorner(Vec3.atLowerCornerOf(p_32560_))).isEmpty();
@@ -602,7 +_,7 @@
             if (this.enderman.getCarriedBlock() != null) {
                 return false;
             } else {
-                return !this.enderman.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)
+                return !net.neoforged.neoforge.event.EventHooks.canEntityGrief(this.enderman.level(), this.enderman)
                     ? false
                     : this.enderman.getRandom().nextInt(reducedTickDelay(20)) == 0;
             }
@@ -616,7 +_,8 @@
             int j = Mth.floor(this.enderman.getY() + randomsource.nextDouble() * 3.0);
             int k = Mth.floor(this.enderman.getZ() - 2.0 + randomsource.nextDouble() * 4.0);
             BlockPos blockpos = new BlockPos(i, j, k);
-            BlockState blockstate = level.getBlockState(blockpos);
+            BlockState blockstate = level.getBlockStateIfLoaded(blockpos); // Paper - Prevent endermen from loading chunks
+            if (blockstate == null) return; // Paper - Prevent endermen from loading chunks
             Vec3 vec3 = new Vec3((double)this.enderman.getBlockX() + 0.5, (double)j + 0.5, (double)this.enderman.getBlockZ() + 0.5);
             Vec3 vec31 = new Vec3((double)i + 0.5, (double)j + 0.5, (double)k + 0.5);
             BlockHitResult blockhitresult = level.clip(new ClipContext(vec3, vec31, ClipContext.Block.OUTLINE, ClipContext.Fluid.NONE, this.enderman));
