--- a/net/minecraft/world/entity/ai/gossip/GossipContainer.java
+++ b/net/minecraft/world/entity/ai/gossip/GossipContainer.java
@@ -61,8 +_,22 @@
         return this.gossips.entrySet().stream().flatMap(p_26185_ -> p_26185_.getValue().unpack(p_26185_.getKey()));
     }
 
+    // Paper start - Perf: Remove streams from hot code
+    private List<GossipContainer.GossipEntry> decompress() {
+        List<GossipContainer.GossipEntry> list = new it.unimi.dsi.fastutil.objects.ObjectArrayList<>();
+        for (Map.Entry<UUID, GossipContainer.EntityGossips> entry : this.gossips.entrySet()) {
+            for (GossipContainer.GossipEntry cur : entry.getValue().decompress(entry.getKey())) {
+                if (cur.weightedValue() != 0) {
+                    list.add(cur);
+                }
+            }
+        }
+        return list;
+    }
+    // Paper end - Perf: Remove streams from hot code
+
     private Collection<GossipContainer.GossipEntry> selectGossipsForTransfer(RandomSource p_217760_, int p_217761_) {
-        List<GossipContainer.GossipEntry> list = this.unpack().toList();
+        List<GossipContainer.GossipEntry> list = this.decompress(); // Paper - Perf: Remove streams from hot code
         if (list.isEmpty()) {
             return Collections.emptyList();
         } else {
@@ -178,13 +_,24 @@
     static class EntityGossips {
         final Object2IntMap<GossipType> entries = new Object2IntOpenHashMap<>();
 
-        public int weightedValue(Predicate<GossipType> p_26221_) {
-            return this.entries
-                .object2IntEntrySet()
-                .stream()
-                .filter(p_26224_ -> p_26221_.test(p_26224_.getKey()))
-                .mapToInt(p_26214_ -> p_26214_.getIntValue() * p_26214_.getKey().weight)
-                .sum();
+        public int weightedValue(Predicate<GossipType> gossipTypeFilter) {
+            // Paper start - Perf: Remove streams from hot code
+            int weight = 0;
+            for (Object2IntMap.Entry<GossipType> entry : entries.object2IntEntrySet()) {
+                if (gossipTypeFilter.test(entry.getKey())) {
+                    weight += entry.getIntValue() * entry.getKey().weight;
+                }
+            }
+            return weight;
+        }
+
+        public List<GossipContainer.GossipEntry> decompress(UUID uuid) {
+            List<GossipContainer.GossipEntry> list = new it.unimi.dsi.fastutil.objects.ObjectArrayList<>();
+            for (Object2IntMap.Entry<GossipType> entry : entries.object2IntEntrySet()) {
+                list.add(new GossipContainer.GossipEntry(uuid, entry.getKey(), entry.getIntValue()));
+            }
+            return list;
+            // Paper end - Perf: Remove streams from hot code
         }
 
         public Stream<GossipContainer.GossipEntry> unpack(UUID p_26216_) {
