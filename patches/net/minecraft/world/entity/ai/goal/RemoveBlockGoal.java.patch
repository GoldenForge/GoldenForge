--- a/net/minecraft/world/entity/ai/goal/RemoveBlockGoal.java
+++ b/net/minecraft/world/entity/ai/goal/RemoveBlockGoal.java
@@ -35,7 +_,7 @@
 
     @Override
     public boolean canUse() {
-        if (!this.removerMob.level().getGameRules().getBoolean(GameRules.RULE_MOBGRIEFING)) {
+        if (!net.neoforged.neoforge.event.EventHooks.canEntityGrief(this.removerMob.level(), this.removerMob)) {
             return false;
         } else if (this.nextStartTick > 0) {
             this.nextStartTick--;
@@ -134,7 +_,9 @@
 
     @Nullable
     private BlockPos getPosWithBlock(BlockPos p_25853_, BlockGetter p_25854_) {
-        if (p_25854_.getBlockState(p_25853_).is(this.blockToRemove)) {
+        net.minecraft.world.level.block.state.BlockState block = p_25854_.getBlockStateIfLoaded(p_25853_); // Paper - Prevent AI rules from loading chunks
+        if (block == null) return null; // Paper - Prevent AI rules from loading
+        if (block.is(this.blockToRemove)) { // Paper - Prevent AI rules from loading chunks
             return p_25853_;
         } else {
             BlockPos[] ablockpos = new BlockPos[]{
@@ -142,7 +_,9 @@
             };
 
             for (BlockPos blockpos : ablockpos) {
-                if (p_25854_.getBlockState(blockpos).is(this.blockToRemove)) {
+
+                net.minecraft.world.level.block.state.BlockState block2 = p_25854_.getBlockStateIfLoaded(blockpos); // Paper - Prevent AI rules from loading chunks
+                if (block2 != null && block2.is(this.blockToRemove)) { // Paper - Prevent AI rules from loading chunks
                     return blockpos;
                 }
             }
@@ -153,12 +_,11 @@
 
     @Override
     protected boolean isValidTarget(LevelReader p_25850_, BlockPos p_25851_) {
-        ChunkAccess chunkaccess = p_25850_.getChunk(
-            SectionPos.blockToSectionCoord(p_25851_.getX()), SectionPos.blockToSectionCoord(p_25851_.getZ()), ChunkStatus.FULL, false
-        );
+        ChunkAccess chunkaccess = p_25850_.getChunkIfLoadedImmediately(p_25851_.getX() >> 4, p_25851_.getZ() >> 4); // Paper - Prevent AI rules from loading chunks
         return chunkaccess == null
             ? false
-            : chunkaccess.getBlockState(p_25851_).is(this.blockToRemove)
+            : chunkaccess.getBlockState(p_25851_).canEntityDestroy(p_25850_, p_25851_, this.removerMob)
+                && chunkaccess.getBlockState(p_25851_).is(this.blockToRemove)
                 && chunkaccess.getBlockState(p_25851_.above()).isAir()
                 && chunkaccess.getBlockState(p_25851_.above(2)).isAir();
     }
