--- a/net/minecraft/world/entity/ai/targeting/TargetingConditions.java
+++ b/net/minecraft/world/entity/ai/targeting/TargetingConditions.java
@@ -75,10 +_,20 @@
                 }
 
                 if (this.range > 0.0) {
-                    double d0 = this.testInvisible ? p_26887_.getVisibilityPercent(p_26886_) : 1.0;
-                    double d1 = Math.max(this.range * d0, 2.0);
-                    double d2 = p_26886_.distanceToSqr(p_26887_.getX(), p_26887_.getY(), p_26887_.getZ());
-                    if (d2 > d1 * d1) {
+                    // Pufferfish start - check range before getting visibility
+                    // d = invisibility percent, e = follow range adjusted for invisibility, f = distance
+                    double f = p_26886_.distanceToSqr(p_26887_.getX(), p_26887_.getY(), p_26887_.getZ());
+                    double followRangeRaw = this.useFollowRange ? this.getFollowRange(p_26886_) : this.range;
+
+                    if (f > followRangeRaw * followRangeRaw) { // the actual follow range will always be this value or smaller, so if the distance is larger then it never will return true after getting invis
+                        return false;
+                    }
+
+                    double d = this.testInvisible ? p_26887_.getVisibilityPercent(p_26886_) : 1.0;
+                    double e = Math.max((followRangeRaw) * d, 2.0); // Paper - Fix MC-145656
+                    // Pufferfish end
+
+                    if (f > e * e) { // Goldenforge
                         return false;
                     }
                 }
@@ -91,4 +_,17 @@
             return true;
         }
     }
+    // Paper start - Fix MC-145656
+    private boolean useFollowRange = false;
+
+    public TargetingConditions useFollowRange() {
+        this.useFollowRange = true;
+        return this;
+    }
+
+    private double getFollowRange(LivingEntity entityliving) {
+        net.minecraft.world.entity.ai.attributes.AttributeInstance attributeinstance = entityliving.getAttribute(net.minecraft.world.entity.ai.attributes.Attributes.FOLLOW_RANGE);
+        return attributeinstance == null ? 16.0D : attributeinstance.getValue();
+    }
+    // Paper end - Fix MC-145656
 }
