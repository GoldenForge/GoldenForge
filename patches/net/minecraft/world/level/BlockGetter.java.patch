--- a/net/minecraft/world/level/BlockGetter.java
+++ b/net/minecraft/world/level/BlockGetter.java
@@ -9,6 +_,7 @@
 import net.minecraft.core.BlockPos;
 import net.minecraft.core.Direction;
 import net.minecraft.util.Mth;
+import net.minecraft.world.level.block.Block;
 import net.minecraft.world.level.block.entity.BlockEntity;
 import net.minecraft.world.level.block.entity.BlockEntityType;
 import net.minecraft.world.level.block.state.BlockState;
@@ -18,7 +_,7 @@
 import net.minecraft.world.phys.Vec3;
 import net.minecraft.world.phys.shapes.VoxelShape;
 
-public interface BlockGetter extends LevelHeightAccessor {
+public interface BlockGetter extends LevelHeightAccessor, net.neoforged.neoforge.common.extensions.IBlockGetterExtension {
     @Nullable
     BlockEntity getBlockEntity(BlockPos p_45570_);
 
@@ -29,10 +_,21 @@
 
     BlockState getBlockState(BlockPos p_45571_);
 
+    // TODO:Goldenforge: we should maybe have a default impl for mod compat
+    // Paper start - if loaded util
+    @Nullable BlockState getBlockStateIfLoaded(BlockPos blockposition);
+
+    default @Nullable Block getBlockIfLoaded(BlockPos blockposition) {
+        BlockState type = this.getBlockStateIfLoaded(blockposition);
+        return type == null ? null : type.getBlock();
+    }
+    @Nullable FluidState getFluidIfLoaded(BlockPos blockposition);
+    // Paper end
+
     FluidState getFluidState(BlockPos p_45569_);
 
     default int getLightEmission(BlockPos p_45572_) {
-        return this.getBlockState(p_45572_).getLightEmission();
+        return this.getBlockState(p_45572_).getLightEmission(this, p_45572_);
     }
 
     default int getMaxLightLevel() {
@@ -64,8 +_,16 @@
 
     default BlockHitResult clip(ClipContext p_45548_) {
         return traverseBlocks(p_45548_.getFrom(), p_45548_.getTo(), p_45548_, (p_151359_, p_151360_) -> {
-            BlockState blockstate = this.getBlockState(p_151360_);
-            FluidState fluidstate = this.getFluidState(p_151360_);
+            // Paper start - Prevent raytrace from loading chunks
+            BlockState blockstate = this.getBlockStateIfLoaded(p_151360_);
+            if (blockstate == null) {
+                // copied the last function parameter (listed below)
+                Vec3 vec3d = p_45548_.getFrom().subtract(p_45548_.getTo());
+
+                return BlockHitResult.miss(p_45548_.getTo(), Direction.getNearest(vec3d.x, vec3d.y, vec3d.z), BlockPos.containing(p_45548_.getTo()));
+            }
+            // Paper end - Prevent raytrace from loading chunks
+            FluidState fluidstate = blockstate.getFluidState(); // Paper - Perf: don't need to go to world state again
             Vec3 vec3 = p_151359_.getFrom();
             Vec3 vec31 = p_151359_.getTo();
             VoxelShape voxelshape = p_151359_.getBlockShape(blockstate, this, p_151360_);
