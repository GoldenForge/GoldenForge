--- a/net/minecraft/util/thread/BlockableEventLoop.java
+++ b/net/minecraft/util/thread/BlockableEventLoop.java
@@ -32,9 +_,11 @@
 
     protected abstract boolean shouldRun(R p_18703_);
 
+    // Paper start - rewrite chunk system
     public boolean isSameThread() {
-        return Thread.currentThread() == this.getRunningThread();
+        return ca.spottedleaf.moonrise.common.util.TickThread.isTickThread();
     }
+    // Paper end - rewrite chunk system
 
     protected abstract Thread getRunningThread();
 
@@ -56,10 +_,15 @@
     }
 
     public CompletableFuture<Void> submitAsync(Runnable p_18690_) {
-        return CompletableFuture.supplyAsync(() -> {
+        return CompletableFuture.<Void>supplyAsync(() -> {
             p_18690_.run();
             return null;
-        }, this);
+        }, this)
+        .exceptionallyCompose(ex -> {
+            // Neo: Log since this is usually swallowed
+            LOGGER.error(LogUtils.FATAL_MARKER, "Error executing task on {}", name(), ex);
+            return CompletableFuture.failedStage(ex);
+        });
     }
 
     @CheckReturnValue
@@ -79,6 +_,14 @@
             p_18710_.run();
         }
     }
+
+    // Paper start
+    public void scheduleOnMain(Runnable runnable) {
+        // postToMainThread does not work the same as older versions of mc
+        // This method is actually used to create a TickTask, which can then be posted onto main
+        this.tell(this.wrapRunnable(runnable));
+    }
+    // Paper end
 
     public void tell(R p_18712_) {
         this.pendingRunnables.add(p_18712_);
